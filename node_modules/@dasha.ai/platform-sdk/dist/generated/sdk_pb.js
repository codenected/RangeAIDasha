"use strict";
// source: sdk.proto
/**
 * @fileoverview
 * @enhanceable
 * @suppress {messageConventions} JS Compiler reports an error if a variable or
 *     field starts with 'MSG_' and isn't a translatable message.
 * @public
 */
// GENERATED CODE -- DO NOT EDIT!
var jspb = require('google-protobuf');
var goog = jspb;
var global = Function('return this')();
goog.exportSymbol('proto.dasha.sdk.AcceptJobMessage', null, global);
goog.exportSymbol('proto.dasha.sdk.AddSessionConfigRequest', null, global);
goog.exportSymbol('proto.dasha.sdk.AddSessionConfigResponse', null, global);
goog.exportSymbol('proto.dasha.sdk.ClientStreamMessage', null, global);
goog.exportSymbol('proto.dasha.sdk.ClosedSessionMessage', null, global);
goog.exportSymbol('proto.dasha.sdk.Empty', null, global);
goog.exportSymbol('proto.dasha.sdk.EnqueueJobRequest', null, global);
goog.exportSymbol('proto.dasha.sdk.EnqueueJobResponse', null, global);
goog.exportSymbol('proto.dasha.sdk.EnqueueJobResponseArray', null, global);
goog.exportSymbol('proto.dasha.sdk.InstanceEvent', null, global);
goog.exportSymbol('proto.dasha.sdk.InstanceEvent.StageCase', null, global);
goog.exportSymbol('proto.dasha.sdk.JobDescription', null, global);
goog.exportSymbol('proto.dasha.sdk.JobNotification', null, global);
goog.exportSymbol('proto.dasha.sdk.JobNotification.JobStatus', null, global);
goog.exportSymbol('proto.dasha.sdk.Parameter', null, global);
goog.exportSymbol('proto.dasha.sdk.RegisterRequest', null, global);
goog.exportSymbol('proto.dasha.sdk.RegisterResponse', null, global);
goog.exportSymbol('proto.dasha.sdk.RegisterResponse.ResponseCase', null, global);
goog.exportSymbol('proto.dasha.sdk.RegistrationError', null, global);
goog.exportSymbol('proto.dasha.sdk.RegistrationStageProgress', null, global);
goog.exportSymbol('proto.dasha.sdk.RegistrationSuccess', null, global);
goog.exportSymbol('proto.dasha.sdk.RejectJobMessage', null, global);
goog.exportSymbol('proto.dasha.sdk.StreamError', null, global);
goog.exportSymbol('proto.dasha.sdk.StreamInit', null, global);
goog.exportSymbol('proto.dasha.sdk.StreamMessage', null, global);
goog.exportSymbol('proto.dasha.sdk.StreamMessage.MessageTypeCase', null, global);
goog.exportSymbol('proto.dasha.sdk.StreamNotification', null, global);
goog.exportSymbol('proto.dasha.sdk.StreamRequest', null, global);
goog.exportSymbol('proto.dasha.sdk.StreamResponse', null, global);
goog.exportSymbol('proto.dasha.sdk.TextMessage', null, global);
goog.exportSymbol('proto.dasha.sdk.TextProtocolMessage', null, global);
goog.exportSymbol('proto.dasha.sdk.TextProtocolMessage.MessageCase', null, global);
goog.exportSymbol('proto.dasha.sdk.TextProtocolStreamInit', null, global);
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.dasha.sdk.InstanceEvent = function (opt_data) {
    jspb.Message.initialize(this, opt_data, 0, -1, null, proto.dasha.sdk.InstanceEvent.oneofGroups_);
};
goog.inherits(proto.dasha.sdk.InstanceEvent, jspb.Message);
if (goog.DEBUG && !COMPILED) {
    /**
     * @public
     * @override
     */
    proto.dasha.sdk.InstanceEvent.displayName = 'proto.dasha.sdk.InstanceEvent';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.dasha.sdk.RegistrationStageProgress = function (opt_data) {
    jspb.Message.initialize(this, opt_data, 0, -1, proto.dasha.sdk.RegistrationStageProgress.repeatedFields_, null);
};
goog.inherits(proto.dasha.sdk.RegistrationStageProgress, jspb.Message);
if (goog.DEBUG && !COMPILED) {
    /**
     * @public
     * @override
     */
    proto.dasha.sdk.RegistrationStageProgress.displayName = 'proto.dasha.sdk.RegistrationStageProgress';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.dasha.sdk.TextMessage = function (opt_data) {
    jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.dasha.sdk.TextMessage, jspb.Message);
if (goog.DEBUG && !COMPILED) {
    /**
     * @public
     * @override
     */
    proto.dasha.sdk.TextMessage.displayName = 'proto.dasha.sdk.TextMessage';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.dasha.sdk.ClosedSessionMessage = function (opt_data) {
    jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.dasha.sdk.ClosedSessionMessage, jspb.Message);
if (goog.DEBUG && !COMPILED) {
    /**
     * @public
     * @override
     */
    proto.dasha.sdk.ClosedSessionMessage.displayName = 'proto.dasha.sdk.ClosedSessionMessage';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.dasha.sdk.TextProtocolMessage = function (opt_data) {
    jspb.Message.initialize(this, opt_data, 0, -1, null, proto.dasha.sdk.TextProtocolMessage.oneofGroups_);
};
goog.inherits(proto.dasha.sdk.TextProtocolMessage, jspb.Message);
if (goog.DEBUG && !COMPILED) {
    /**
     * @public
     * @override
     */
    proto.dasha.sdk.TextProtocolMessage.displayName = 'proto.dasha.sdk.TextProtocolMessage';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.dasha.sdk.TextProtocolStreamInit = function (opt_data) {
    jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.dasha.sdk.TextProtocolStreamInit, jspb.Message);
if (goog.DEBUG && !COMPILED) {
    /**
     * @public
     * @override
     */
    proto.dasha.sdk.TextProtocolStreamInit.displayName = 'proto.dasha.sdk.TextProtocolStreamInit';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.dasha.sdk.RegisterRequest = function (opt_data) {
    jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.dasha.sdk.RegisterRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
    /**
     * @public
     * @override
     */
    proto.dasha.sdk.RegisterRequest.displayName = 'proto.dasha.sdk.RegisterRequest';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.dasha.sdk.RegisterResponse = function (opt_data) {
    jspb.Message.initialize(this, opt_data, 0, -1, null, proto.dasha.sdk.RegisterResponse.oneofGroups_);
};
goog.inherits(proto.dasha.sdk.RegisterResponse, jspb.Message);
if (goog.DEBUG && !COMPILED) {
    /**
     * @public
     * @override
     */
    proto.dasha.sdk.RegisterResponse.displayName = 'proto.dasha.sdk.RegisterResponse';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.dasha.sdk.RegistrationSuccess = function (opt_data) {
    jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.dasha.sdk.RegistrationSuccess, jspb.Message);
if (goog.DEBUG && !COMPILED) {
    /**
     * @public
     * @override
     */
    proto.dasha.sdk.RegistrationSuccess.displayName = 'proto.dasha.sdk.RegistrationSuccess';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.dasha.sdk.RegistrationError = function (opt_data) {
    jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.dasha.sdk.RegistrationError, jspb.Message);
if (goog.DEBUG && !COMPILED) {
    /**
     * @public
     * @override
     */
    proto.dasha.sdk.RegistrationError.displayName = 'proto.dasha.sdk.RegistrationError';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.dasha.sdk.AddSessionConfigRequest = function (opt_data) {
    jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.dasha.sdk.AddSessionConfigRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
    /**
     * @public
     * @override
     */
    proto.dasha.sdk.AddSessionConfigRequest.displayName = 'proto.dasha.sdk.AddSessionConfigRequest';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.dasha.sdk.AddSessionConfigResponse = function (opt_data) {
    jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.dasha.sdk.AddSessionConfigResponse, jspb.Message);
if (goog.DEBUG && !COMPILED) {
    /**
     * @public
     * @override
     */
    proto.dasha.sdk.AddSessionConfigResponse.displayName = 'proto.dasha.sdk.AddSessionConfigResponse';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.dasha.sdk.EnqueueJobRequest = function (opt_data) {
    jspb.Message.initialize(this, opt_data, 0, -1, proto.dasha.sdk.EnqueueJobRequest.repeatedFields_, null);
};
goog.inherits(proto.dasha.sdk.EnqueueJobRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
    /**
     * @public
     * @override
     */
    proto.dasha.sdk.EnqueueJobRequest.displayName = 'proto.dasha.sdk.EnqueueJobRequest';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.dasha.sdk.JobDescription = function (opt_data) {
    jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.dasha.sdk.JobDescription, jspb.Message);
if (goog.DEBUG && !COMPILED) {
    /**
     * @public
     * @override
     */
    proto.dasha.sdk.JobDescription.displayName = 'proto.dasha.sdk.JobDescription';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.dasha.sdk.EnqueueJobResponseArray = function (opt_data) {
    jspb.Message.initialize(this, opt_data, 0, -1, proto.dasha.sdk.EnqueueJobResponseArray.repeatedFields_, null);
};
goog.inherits(proto.dasha.sdk.EnqueueJobResponseArray, jspb.Message);
if (goog.DEBUG && !COMPILED) {
    /**
     * @public
     * @override
     */
    proto.dasha.sdk.EnqueueJobResponseArray.displayName = 'proto.dasha.sdk.EnqueueJobResponseArray';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.dasha.sdk.EnqueueJobResponse = function (opt_data) {
    jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.dasha.sdk.EnqueueJobResponse, jspb.Message);
if (goog.DEBUG && !COMPILED) {
    /**
     * @public
     * @override
     */
    proto.dasha.sdk.EnqueueJobResponse.displayName = 'proto.dasha.sdk.EnqueueJobResponse';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.dasha.sdk.JobNotification = function (opt_data) {
    jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.dasha.sdk.JobNotification, jspb.Message);
if (goog.DEBUG && !COMPILED) {
    /**
     * @public
     * @override
     */
    proto.dasha.sdk.JobNotification.displayName = 'proto.dasha.sdk.JobNotification';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.dasha.sdk.AcceptJobMessage = function (opt_data) {
    jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.dasha.sdk.AcceptJobMessage, jspb.Message);
if (goog.DEBUG && !COMPILED) {
    /**
     * @public
     * @override
     */
    proto.dasha.sdk.AcceptJobMessage.displayName = 'proto.dasha.sdk.AcceptJobMessage';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.dasha.sdk.RejectJobMessage = function (opt_data) {
    jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.dasha.sdk.RejectJobMessage, jspb.Message);
if (goog.DEBUG && !COMPILED) {
    /**
     * @public
     * @override
     */
    proto.dasha.sdk.RejectJobMessage.displayName = 'proto.dasha.sdk.RejectJobMessage';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.dasha.sdk.StreamInit = function (opt_data) {
    jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.dasha.sdk.StreamInit, jspb.Message);
if (goog.DEBUG && !COMPILED) {
    /**
     * @public
     * @override
     */
    proto.dasha.sdk.StreamInit.displayName = 'proto.dasha.sdk.StreamInit';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.dasha.sdk.Empty = function (opt_data) {
    jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.dasha.sdk.Empty, jspb.Message);
if (goog.DEBUG && !COMPILED) {
    /**
     * @public
     * @override
     */
    proto.dasha.sdk.Empty.displayName = 'proto.dasha.sdk.Empty';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.dasha.sdk.Parameter = function (opt_data) {
    jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.dasha.sdk.Parameter, jspb.Message);
if (goog.DEBUG && !COMPILED) {
    /**
     * @public
     * @override
     */
    proto.dasha.sdk.Parameter.displayName = 'proto.dasha.sdk.Parameter';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.dasha.sdk.StreamRequest = function (opt_data) {
    jspb.Message.initialize(this, opt_data, 0, -1, proto.dasha.sdk.StreamRequest.repeatedFields_, null);
};
goog.inherits(proto.dasha.sdk.StreamRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
    /**
     * @public
     * @override
     */
    proto.dasha.sdk.StreamRequest.displayName = 'proto.dasha.sdk.StreamRequest';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.dasha.sdk.StreamNotification = function (opt_data) {
    jspb.Message.initialize(this, opt_data, 0, -1, proto.dasha.sdk.StreamNotification.repeatedFields_, null);
};
goog.inherits(proto.dasha.sdk.StreamNotification, jspb.Message);
if (goog.DEBUG && !COMPILED) {
    /**
     * @public
     * @override
     */
    proto.dasha.sdk.StreamNotification.displayName = 'proto.dasha.sdk.StreamNotification';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.dasha.sdk.StreamResponse = function (opt_data) {
    jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.dasha.sdk.StreamResponse, jspb.Message);
if (goog.DEBUG && !COMPILED) {
    /**
     * @public
     * @override
     */
    proto.dasha.sdk.StreamResponse.displayName = 'proto.dasha.sdk.StreamResponse';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.dasha.sdk.StreamError = function (opt_data) {
    jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.dasha.sdk.StreamError, jspb.Message);
if (goog.DEBUG && !COMPILED) {
    /**
     * @public
     * @override
     */
    proto.dasha.sdk.StreamError.displayName = 'proto.dasha.sdk.StreamError';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.dasha.sdk.ClientStreamMessage = function (opt_data) {
    jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.dasha.sdk.ClientStreamMessage, jspb.Message);
if (goog.DEBUG && !COMPILED) {
    /**
     * @public
     * @override
     */
    proto.dasha.sdk.ClientStreamMessage.displayName = 'proto.dasha.sdk.ClientStreamMessage';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.dasha.sdk.StreamMessage = function (opt_data) {
    jspb.Message.initialize(this, opt_data, 0, -1, null, proto.dasha.sdk.StreamMessage.oneofGroups_);
};
goog.inherits(proto.dasha.sdk.StreamMessage, jspb.Message);
if (goog.DEBUG && !COMPILED) {
    /**
     * @public
     * @override
     */
    proto.dasha.sdk.StreamMessage.displayName = 'proto.dasha.sdk.StreamMessage';
}
/**
 * Oneof group definitions for this message. Each group defines the field
 * numbers belonging to that group. When of these fields' value is set, all
 * other fields in the group are cleared. During deserialization, if multiple
 * fields are encountered for a group, only the last value seen will be kept.
 * @private {!Array<!Array<number>>}
 * @const
 */
proto.dasha.sdk.InstanceEvent.oneofGroups_ = [[1, 2, 3, 4]];
/**
 * @enum {number}
 */
proto.dasha.sdk.InstanceEvent.StageCase = {
    STAGE_NOT_SET: 0,
    ERROR: 1,
    PROGRESS: 2,
    SUCCESS: 3,
    JOB_NOTIFICATION: 4
};
/**
 * @return {proto.dasha.sdk.InstanceEvent.StageCase}
 */
proto.dasha.sdk.InstanceEvent.prototype.getStageCase = function () {
    return /** @type {proto.dasha.sdk.InstanceEvent.StageCase} */ (jspb.Message.computeOneofCase(this, proto.dasha.sdk.InstanceEvent.oneofGroups_[0]));
};
if (jspb.Message.GENERATE_TO_OBJECT) {
    /**
     * Creates an object representation of this proto.
     * Field names that are reserved in JavaScript and will be renamed to pb_name.
     * Optional fields that are not set will be set to undefined.
     * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
     * For the list of reserved names please see:
     *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
     * @param {boolean=} opt_includeInstance Deprecated. whether to include the
     *     JSPB instance for transitional soy proto support:
     *     http://goto/soy-param-migration
     * @return {!Object}
     */
    proto.dasha.sdk.InstanceEvent.prototype.toObject = function (opt_includeInstance) {
        return proto.dasha.sdk.InstanceEvent.toObject(opt_includeInstance, this);
    };
    /**
     * Static version of the {@see toObject} method.
     * @param {boolean|undefined} includeInstance Deprecated. Whether to include
     *     the JSPB instance for transitional soy proto support:
     *     http://goto/soy-param-migration
     * @param {!proto.dasha.sdk.InstanceEvent} msg The msg instance to transform.
     * @return {!Object}
     * @suppress {unusedLocalVariables} f is only used for nested messages
     */
    proto.dasha.sdk.InstanceEvent.toObject = function (includeInstance, msg) {
        var f, obj = {
            error: (f = msg.getError()) && proto.dasha.sdk.RegistrationError.toObject(includeInstance, f),
            progress: (f = msg.getProgress()) && proto.dasha.sdk.RegistrationStageProgress.toObject(includeInstance, f),
            success: (f = msg.getSuccess()) && proto.dasha.sdk.RegistrationSuccess.toObject(includeInstance, f),
            jobNotification: (f = msg.getJobNotification()) && proto.dasha.sdk.JobNotification.toObject(includeInstance, f)
        };
        if (includeInstance) {
            obj.$jspbMessageInstance = msg;
        }
        return obj;
    };
}
/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.dasha.sdk.InstanceEvent}
 */
proto.dasha.sdk.InstanceEvent.deserializeBinary = function (bytes) {
    var reader = new jspb.BinaryReader(bytes);
    var msg = new proto.dasha.sdk.InstanceEvent;
    return proto.dasha.sdk.InstanceEvent.deserializeBinaryFromReader(msg, reader);
};
/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.dasha.sdk.InstanceEvent} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.dasha.sdk.InstanceEvent}
 */
proto.dasha.sdk.InstanceEvent.deserializeBinaryFromReader = function (msg, reader) {
    while (reader.nextField()) {
        if (reader.isEndGroup()) {
            break;
        }
        var field = reader.getFieldNumber();
        switch (field) {
            case 1:
                var value = new proto.dasha.sdk.RegistrationError;
                reader.readMessage(value, proto.dasha.sdk.RegistrationError.deserializeBinaryFromReader);
                msg.setError(value);
                break;
            case 2:
                var value = new proto.dasha.sdk.RegistrationStageProgress;
                reader.readMessage(value, proto.dasha.sdk.RegistrationStageProgress.deserializeBinaryFromReader);
                msg.setProgress(value);
                break;
            case 3:
                var value = new proto.dasha.sdk.RegistrationSuccess;
                reader.readMessage(value, proto.dasha.sdk.RegistrationSuccess.deserializeBinaryFromReader);
                msg.setSuccess(value);
                break;
            case 4:
                var value = new proto.dasha.sdk.JobNotification;
                reader.readMessage(value, proto.dasha.sdk.JobNotification.deserializeBinaryFromReader);
                msg.setJobNotification(value);
                break;
            default:
                reader.skipField();
                break;
        }
    }
    return msg;
};
/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.dasha.sdk.InstanceEvent.prototype.serializeBinary = function () {
    var writer = new jspb.BinaryWriter();
    proto.dasha.sdk.InstanceEvent.serializeBinaryToWriter(this, writer);
    return writer.getResultBuffer();
};
/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.dasha.sdk.InstanceEvent} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.dasha.sdk.InstanceEvent.serializeBinaryToWriter = function (message, writer) {
    var f = undefined;
    f = message.getError();
    if (f != null) {
        writer.writeMessage(1, f, proto.dasha.sdk.RegistrationError.serializeBinaryToWriter);
    }
    f = message.getProgress();
    if (f != null) {
        writer.writeMessage(2, f, proto.dasha.sdk.RegistrationStageProgress.serializeBinaryToWriter);
    }
    f = message.getSuccess();
    if (f != null) {
        writer.writeMessage(3, f, proto.dasha.sdk.RegistrationSuccess.serializeBinaryToWriter);
    }
    f = message.getJobNotification();
    if (f != null) {
        writer.writeMessage(4, f, proto.dasha.sdk.JobNotification.serializeBinaryToWriter);
    }
};
/**
 * optional RegistrationError error = 1;
 * @return {?proto.dasha.sdk.RegistrationError}
 */
proto.dasha.sdk.InstanceEvent.prototype.getError = function () {
    return /** @type{?proto.dasha.sdk.RegistrationError} */ (jspb.Message.getWrapperField(this, proto.dasha.sdk.RegistrationError, 1));
};
/**
 * @param {?proto.dasha.sdk.RegistrationError|undefined} value
 * @return {!proto.dasha.sdk.InstanceEvent} returns this
*/
proto.dasha.sdk.InstanceEvent.prototype.setError = function (value) {
    return jspb.Message.setOneofWrapperField(this, 1, proto.dasha.sdk.InstanceEvent.oneofGroups_[0], value);
};
/**
 * Clears the message field making it undefined.
 * @return {!proto.dasha.sdk.InstanceEvent} returns this
 */
proto.dasha.sdk.InstanceEvent.prototype.clearError = function () {
    return this.setError(undefined);
};
/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.dasha.sdk.InstanceEvent.prototype.hasError = function () {
    return jspb.Message.getField(this, 1) != null;
};
/**
 * optional RegistrationStageProgress progress = 2;
 * @return {?proto.dasha.sdk.RegistrationStageProgress}
 */
proto.dasha.sdk.InstanceEvent.prototype.getProgress = function () {
    return /** @type{?proto.dasha.sdk.RegistrationStageProgress} */ (jspb.Message.getWrapperField(this, proto.dasha.sdk.RegistrationStageProgress, 2));
};
/**
 * @param {?proto.dasha.sdk.RegistrationStageProgress|undefined} value
 * @return {!proto.dasha.sdk.InstanceEvent} returns this
*/
proto.dasha.sdk.InstanceEvent.prototype.setProgress = function (value) {
    return jspb.Message.setOneofWrapperField(this, 2, proto.dasha.sdk.InstanceEvent.oneofGroups_[0], value);
};
/**
 * Clears the message field making it undefined.
 * @return {!proto.dasha.sdk.InstanceEvent} returns this
 */
proto.dasha.sdk.InstanceEvent.prototype.clearProgress = function () {
    return this.setProgress(undefined);
};
/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.dasha.sdk.InstanceEvent.prototype.hasProgress = function () {
    return jspb.Message.getField(this, 2) != null;
};
/**
 * optional RegistrationSuccess success = 3;
 * @return {?proto.dasha.sdk.RegistrationSuccess}
 */
proto.dasha.sdk.InstanceEvent.prototype.getSuccess = function () {
    return /** @type{?proto.dasha.sdk.RegistrationSuccess} */ (jspb.Message.getWrapperField(this, proto.dasha.sdk.RegistrationSuccess, 3));
};
/**
 * @param {?proto.dasha.sdk.RegistrationSuccess|undefined} value
 * @return {!proto.dasha.sdk.InstanceEvent} returns this
*/
proto.dasha.sdk.InstanceEvent.prototype.setSuccess = function (value) {
    return jspb.Message.setOneofWrapperField(this, 3, proto.dasha.sdk.InstanceEvent.oneofGroups_[0], value);
};
/**
 * Clears the message field making it undefined.
 * @return {!proto.dasha.sdk.InstanceEvent} returns this
 */
proto.dasha.sdk.InstanceEvent.prototype.clearSuccess = function () {
    return this.setSuccess(undefined);
};
/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.dasha.sdk.InstanceEvent.prototype.hasSuccess = function () {
    return jspb.Message.getField(this, 3) != null;
};
/**
 * optional JobNotification job_notification = 4;
 * @return {?proto.dasha.sdk.JobNotification}
 */
proto.dasha.sdk.InstanceEvent.prototype.getJobNotification = function () {
    return /** @type{?proto.dasha.sdk.JobNotification} */ (jspb.Message.getWrapperField(this, proto.dasha.sdk.JobNotification, 4));
};
/**
 * @param {?proto.dasha.sdk.JobNotification|undefined} value
 * @return {!proto.dasha.sdk.InstanceEvent} returns this
*/
proto.dasha.sdk.InstanceEvent.prototype.setJobNotification = function (value) {
    return jspb.Message.setOneofWrapperField(this, 4, proto.dasha.sdk.InstanceEvent.oneofGroups_[0], value);
};
/**
 * Clears the message field making it undefined.
 * @return {!proto.dasha.sdk.InstanceEvent} returns this
 */
proto.dasha.sdk.InstanceEvent.prototype.clearJobNotification = function () {
    return this.setJobNotification(undefined);
};
/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.dasha.sdk.InstanceEvent.prototype.hasJobNotification = function () {
    return jspb.Message.getField(this, 4) != null;
};
/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.dasha.sdk.RegistrationStageProgress.repeatedFields_ = [3];
if (jspb.Message.GENERATE_TO_OBJECT) {
    /**
     * Creates an object representation of this proto.
     * Field names that are reserved in JavaScript and will be renamed to pb_name.
     * Optional fields that are not set will be set to undefined.
     * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
     * For the list of reserved names please see:
     *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
     * @param {boolean=} opt_includeInstance Deprecated. whether to include the
     *     JSPB instance for transitional soy proto support:
     *     http://goto/soy-param-migration
     * @return {!Object}
     */
    proto.dasha.sdk.RegistrationStageProgress.prototype.toObject = function (opt_includeInstance) {
        return proto.dasha.sdk.RegistrationStageProgress.toObject(opt_includeInstance, this);
    };
    /**
     * Static version of the {@see toObject} method.
     * @param {boolean|undefined} includeInstance Deprecated. Whether to include
     *     the JSPB instance for transitional soy proto support:
     *     http://goto/soy-param-migration
     * @param {!proto.dasha.sdk.RegistrationStageProgress} msg The msg instance to transform.
     * @return {!Object}
     * @suppress {unusedLocalVariables} f is only used for nested messages
     */
    proto.dasha.sdk.RegistrationStageProgress.toObject = function (includeInstance, msg) {
        var f, obj = {
            percent: jspb.Message.getFieldWithDefault(msg, 1, 0),
            stageDescription: jspb.Message.getFieldWithDefault(msg, 2, ""),
            stageScopeList: (f = jspb.Message.getRepeatedField(msg, 3)) == null ? undefined : f,
            extraInfoJson: jspb.Message.getFieldWithDefault(msg, 4, "")
        };
        if (includeInstance) {
            obj.$jspbMessageInstance = msg;
        }
        return obj;
    };
}
/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.dasha.sdk.RegistrationStageProgress}
 */
proto.dasha.sdk.RegistrationStageProgress.deserializeBinary = function (bytes) {
    var reader = new jspb.BinaryReader(bytes);
    var msg = new proto.dasha.sdk.RegistrationStageProgress;
    return proto.dasha.sdk.RegistrationStageProgress.deserializeBinaryFromReader(msg, reader);
};
/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.dasha.sdk.RegistrationStageProgress} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.dasha.sdk.RegistrationStageProgress}
 */
proto.dasha.sdk.RegistrationStageProgress.deserializeBinaryFromReader = function (msg, reader) {
    while (reader.nextField()) {
        if (reader.isEndGroup()) {
            break;
        }
        var field = reader.getFieldNumber();
        switch (field) {
            case 1:
                var value = /** @type {number} */ (reader.readUint32());
                msg.setPercent(value);
                break;
            case 2:
                var value = /** @type {string} */ (reader.readString());
                msg.setStageDescription(value);
                break;
            case 3:
                var value = /** @type {string} */ (reader.readString());
                msg.addStageScope(value);
                break;
            case 4:
                var value = /** @type {string} */ (reader.readString());
                msg.setExtraInfoJson(value);
                break;
            default:
                reader.skipField();
                break;
        }
    }
    return msg;
};
/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.dasha.sdk.RegistrationStageProgress.prototype.serializeBinary = function () {
    var writer = new jspb.BinaryWriter();
    proto.dasha.sdk.RegistrationStageProgress.serializeBinaryToWriter(this, writer);
    return writer.getResultBuffer();
};
/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.dasha.sdk.RegistrationStageProgress} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.dasha.sdk.RegistrationStageProgress.serializeBinaryToWriter = function (message, writer) {
    var f = undefined;
    f = message.getPercent();
    if (f !== 0) {
        writer.writeUint32(1, f);
    }
    f = message.getStageDescription();
    if (f.length > 0) {
        writer.writeString(2, f);
    }
    f = message.getStageScopeList();
    if (f.length > 0) {
        writer.writeRepeatedString(3, f);
    }
    f = message.getExtraInfoJson();
    if (f.length > 0) {
        writer.writeString(4, f);
    }
};
/**
 * optional uint32 percent = 1;
 * @return {number}
 */
proto.dasha.sdk.RegistrationStageProgress.prototype.getPercent = function () {
    return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 1, 0));
};
/**
 * @param {number} value
 * @return {!proto.dasha.sdk.RegistrationStageProgress} returns this
 */
proto.dasha.sdk.RegistrationStageProgress.prototype.setPercent = function (value) {
    return jspb.Message.setProto3IntField(this, 1, value);
};
/**
 * optional string stage_description = 2;
 * @return {string}
 */
proto.dasha.sdk.RegistrationStageProgress.prototype.getStageDescription = function () {
    return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};
/**
 * @param {string} value
 * @return {!proto.dasha.sdk.RegistrationStageProgress} returns this
 */
proto.dasha.sdk.RegistrationStageProgress.prototype.setStageDescription = function (value) {
    return jspb.Message.setProto3StringField(this, 2, value);
};
/**
 * repeated string stage_scope = 3;
 * @return {!Array<string>}
 */
proto.dasha.sdk.RegistrationStageProgress.prototype.getStageScopeList = function () {
    return /** @type {!Array<string>} */ (jspb.Message.getRepeatedField(this, 3));
};
/**
 * @param {!Array<string>} value
 * @return {!proto.dasha.sdk.RegistrationStageProgress} returns this
 */
proto.dasha.sdk.RegistrationStageProgress.prototype.setStageScopeList = function (value) {
    return jspb.Message.setField(this, 3, value || []);
};
/**
 * @param {string} value
 * @param {number=} opt_index
 * @return {!proto.dasha.sdk.RegistrationStageProgress} returns this
 */
proto.dasha.sdk.RegistrationStageProgress.prototype.addStageScope = function (value, opt_index) {
    return jspb.Message.addToRepeatedField(this, 3, value, opt_index);
};
/**
 * Clears the list making it empty but non-null.
 * @return {!proto.dasha.sdk.RegistrationStageProgress} returns this
 */
proto.dasha.sdk.RegistrationStageProgress.prototype.clearStageScopeList = function () {
    return this.setStageScopeList([]);
};
/**
 * optional string extra_info_json = 4;
 * @return {string}
 */
proto.dasha.sdk.RegistrationStageProgress.prototype.getExtraInfoJson = function () {
    return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 4, ""));
};
/**
 * @param {string} value
 * @return {!proto.dasha.sdk.RegistrationStageProgress} returns this
 */
proto.dasha.sdk.RegistrationStageProgress.prototype.setExtraInfoJson = function (value) {
    return jspb.Message.setProto3StringField(this, 4, value);
};
if (jspb.Message.GENERATE_TO_OBJECT) {
    /**
     * Creates an object representation of this proto.
     * Field names that are reserved in JavaScript and will be renamed to pb_name.
     * Optional fields that are not set will be set to undefined.
     * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
     * For the list of reserved names please see:
     *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
     * @param {boolean=} opt_includeInstance Deprecated. whether to include the
     *     JSPB instance for transitional soy proto support:
     *     http://goto/soy-param-migration
     * @return {!Object}
     */
    proto.dasha.sdk.TextMessage.prototype.toObject = function (opt_includeInstance) {
        return proto.dasha.sdk.TextMessage.toObject(opt_includeInstance, this);
    };
    /**
     * Static version of the {@see toObject} method.
     * @param {boolean|undefined} includeInstance Deprecated. Whether to include
     *     the JSPB instance for transitional soy proto support:
     *     http://goto/soy-param-migration
     * @param {!proto.dasha.sdk.TextMessage} msg The msg instance to transform.
     * @return {!Object}
     * @suppress {unusedLocalVariables} f is only used for nested messages
     */
    proto.dasha.sdk.TextMessage.toObject = function (includeInstance, msg) {
        var f, obj = {
            text: jspb.Message.getFieldWithDefault(msg, 1, "")
        };
        if (includeInstance) {
            obj.$jspbMessageInstance = msg;
        }
        return obj;
    };
}
/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.dasha.sdk.TextMessage}
 */
proto.dasha.sdk.TextMessage.deserializeBinary = function (bytes) {
    var reader = new jspb.BinaryReader(bytes);
    var msg = new proto.dasha.sdk.TextMessage;
    return proto.dasha.sdk.TextMessage.deserializeBinaryFromReader(msg, reader);
};
/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.dasha.sdk.TextMessage} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.dasha.sdk.TextMessage}
 */
proto.dasha.sdk.TextMessage.deserializeBinaryFromReader = function (msg, reader) {
    while (reader.nextField()) {
        if (reader.isEndGroup()) {
            break;
        }
        var field = reader.getFieldNumber();
        switch (field) {
            case 1:
                var value = /** @type {string} */ (reader.readString());
                msg.setText(value);
                break;
            default:
                reader.skipField();
                break;
        }
    }
    return msg;
};
/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.dasha.sdk.TextMessage.prototype.serializeBinary = function () {
    var writer = new jspb.BinaryWriter();
    proto.dasha.sdk.TextMessage.serializeBinaryToWriter(this, writer);
    return writer.getResultBuffer();
};
/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.dasha.sdk.TextMessage} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.dasha.sdk.TextMessage.serializeBinaryToWriter = function (message, writer) {
    var f = undefined;
    f = message.getText();
    if (f.length > 0) {
        writer.writeString(1, f);
    }
};
/**
 * optional string text = 1;
 * @return {string}
 */
proto.dasha.sdk.TextMessage.prototype.getText = function () {
    return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};
/**
 * @param {string} value
 * @return {!proto.dasha.sdk.TextMessage} returns this
 */
proto.dasha.sdk.TextMessage.prototype.setText = function (value) {
    return jspb.Message.setProto3StringField(this, 1, value);
};
if (jspb.Message.GENERATE_TO_OBJECT) {
    /**
     * Creates an object representation of this proto.
     * Field names that are reserved in JavaScript and will be renamed to pb_name.
     * Optional fields that are not set will be set to undefined.
     * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
     * For the list of reserved names please see:
     *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
     * @param {boolean=} opt_includeInstance Deprecated. whether to include the
     *     JSPB instance for transitional soy proto support:
     *     http://goto/soy-param-migration
     * @return {!Object}
     */
    proto.dasha.sdk.ClosedSessionMessage.prototype.toObject = function (opt_includeInstance) {
        return proto.dasha.sdk.ClosedSessionMessage.toObject(opt_includeInstance, this);
    };
    /**
     * Static version of the {@see toObject} method.
     * @param {boolean|undefined} includeInstance Deprecated. Whether to include
     *     the JSPB instance for transitional soy proto support:
     *     http://goto/soy-param-migration
     * @param {!proto.dasha.sdk.ClosedSessionMessage} msg The msg instance to transform.
     * @return {!Object}
     * @suppress {unusedLocalVariables} f is only used for nested messages
     */
    proto.dasha.sdk.ClosedSessionMessage.toObject = function (includeInstance, msg) {
        var f, obj = {};
        if (includeInstance) {
            obj.$jspbMessageInstance = msg;
        }
        return obj;
    };
}
/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.dasha.sdk.ClosedSessionMessage}
 */
proto.dasha.sdk.ClosedSessionMessage.deserializeBinary = function (bytes) {
    var reader = new jspb.BinaryReader(bytes);
    var msg = new proto.dasha.sdk.ClosedSessionMessage;
    return proto.dasha.sdk.ClosedSessionMessage.deserializeBinaryFromReader(msg, reader);
};
/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.dasha.sdk.ClosedSessionMessage} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.dasha.sdk.ClosedSessionMessage}
 */
proto.dasha.sdk.ClosedSessionMessage.deserializeBinaryFromReader = function (msg, reader) {
    while (reader.nextField()) {
        if (reader.isEndGroup()) {
            break;
        }
        var field = reader.getFieldNumber();
        switch (field) {
            default:
                reader.skipField();
                break;
        }
    }
    return msg;
};
/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.dasha.sdk.ClosedSessionMessage.prototype.serializeBinary = function () {
    var writer = new jspb.BinaryWriter();
    proto.dasha.sdk.ClosedSessionMessage.serializeBinaryToWriter(this, writer);
    return writer.getResultBuffer();
};
/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.dasha.sdk.ClosedSessionMessage} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.dasha.sdk.ClosedSessionMessage.serializeBinaryToWriter = function (message, writer) {
    var f = undefined;
};
/**
 * Oneof group definitions for this message. Each group defines the field
 * numbers belonging to that group. When of these fields' value is set, all
 * other fields in the group are cleared. During deserialization, if multiple
 * fields are encountered for a group, only the last value seen will be kept.
 * @private {!Array<!Array<number>>}
 * @const
 */
proto.dasha.sdk.TextProtocolMessage.oneofGroups_ = [[2, 3]];
/**
 * @enum {number}
 */
proto.dasha.sdk.TextProtocolMessage.MessageCase = {
    MESSAGE_NOT_SET: 0,
    TEXT: 2,
    CLOSED: 3
};
/**
 * @return {proto.dasha.sdk.TextProtocolMessage.MessageCase}
 */
proto.dasha.sdk.TextProtocolMessage.prototype.getMessageCase = function () {
    return /** @type {proto.dasha.sdk.TextProtocolMessage.MessageCase} */ (jspb.Message.computeOneofCase(this, proto.dasha.sdk.TextProtocolMessage.oneofGroups_[0]));
};
if (jspb.Message.GENERATE_TO_OBJECT) {
    /**
     * Creates an object representation of this proto.
     * Field names that are reserved in JavaScript and will be renamed to pb_name.
     * Optional fields that are not set will be set to undefined.
     * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
     * For the list of reserved names please see:
     *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
     * @param {boolean=} opt_includeInstance Deprecated. whether to include the
     *     JSPB instance for transitional soy proto support:
     *     http://goto/soy-param-migration
     * @return {!Object}
     */
    proto.dasha.sdk.TextProtocolMessage.prototype.toObject = function (opt_includeInstance) {
        return proto.dasha.sdk.TextProtocolMessage.toObject(opt_includeInstance, this);
    };
    /**
     * Static version of the {@see toObject} method.
     * @param {boolean|undefined} includeInstance Deprecated. Whether to include
     *     the JSPB instance for transitional soy proto support:
     *     http://goto/soy-param-migration
     * @param {!proto.dasha.sdk.TextProtocolMessage} msg The msg instance to transform.
     * @return {!Object}
     * @suppress {unusedLocalVariables} f is only used for nested messages
     */
    proto.dasha.sdk.TextProtocolMessage.toObject = function (includeInstance, msg) {
        var f, obj = {
            jobId: jspb.Message.getFieldWithDefault(msg, 1, ""),
            text: (f = msg.getText()) && proto.dasha.sdk.TextMessage.toObject(includeInstance, f),
            closed: (f = msg.getClosed()) && proto.dasha.sdk.ClosedSessionMessage.toObject(includeInstance, f)
        };
        if (includeInstance) {
            obj.$jspbMessageInstance = msg;
        }
        return obj;
    };
}
/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.dasha.sdk.TextProtocolMessage}
 */
proto.dasha.sdk.TextProtocolMessage.deserializeBinary = function (bytes) {
    var reader = new jspb.BinaryReader(bytes);
    var msg = new proto.dasha.sdk.TextProtocolMessage;
    return proto.dasha.sdk.TextProtocolMessage.deserializeBinaryFromReader(msg, reader);
};
/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.dasha.sdk.TextProtocolMessage} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.dasha.sdk.TextProtocolMessage}
 */
proto.dasha.sdk.TextProtocolMessage.deserializeBinaryFromReader = function (msg, reader) {
    while (reader.nextField()) {
        if (reader.isEndGroup()) {
            break;
        }
        var field = reader.getFieldNumber();
        switch (field) {
            case 1:
                var value = /** @type {string} */ (reader.readString());
                msg.setJobId(value);
                break;
            case 2:
                var value = new proto.dasha.sdk.TextMessage;
                reader.readMessage(value, proto.dasha.sdk.TextMessage.deserializeBinaryFromReader);
                msg.setText(value);
                break;
            case 3:
                var value = new proto.dasha.sdk.ClosedSessionMessage;
                reader.readMessage(value, proto.dasha.sdk.ClosedSessionMessage.deserializeBinaryFromReader);
                msg.setClosed(value);
                break;
            default:
                reader.skipField();
                break;
        }
    }
    return msg;
};
/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.dasha.sdk.TextProtocolMessage.prototype.serializeBinary = function () {
    var writer = new jspb.BinaryWriter();
    proto.dasha.sdk.TextProtocolMessage.serializeBinaryToWriter(this, writer);
    return writer.getResultBuffer();
};
/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.dasha.sdk.TextProtocolMessage} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.dasha.sdk.TextProtocolMessage.serializeBinaryToWriter = function (message, writer) {
    var f = undefined;
    f = message.getJobId();
    if (f.length > 0) {
        writer.writeString(1, f);
    }
    f = message.getText();
    if (f != null) {
        writer.writeMessage(2, f, proto.dasha.sdk.TextMessage.serializeBinaryToWriter);
    }
    f = message.getClosed();
    if (f != null) {
        writer.writeMessage(3, f, proto.dasha.sdk.ClosedSessionMessage.serializeBinaryToWriter);
    }
};
/**
 * optional string job_id = 1;
 * @return {string}
 */
proto.dasha.sdk.TextProtocolMessage.prototype.getJobId = function () {
    return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};
/**
 * @param {string} value
 * @return {!proto.dasha.sdk.TextProtocolMessage} returns this
 */
proto.dasha.sdk.TextProtocolMessage.prototype.setJobId = function (value) {
    return jspb.Message.setProto3StringField(this, 1, value);
};
/**
 * optional TextMessage text = 2;
 * @return {?proto.dasha.sdk.TextMessage}
 */
proto.dasha.sdk.TextProtocolMessage.prototype.getText = function () {
    return /** @type{?proto.dasha.sdk.TextMessage} */ (jspb.Message.getWrapperField(this, proto.dasha.sdk.TextMessage, 2));
};
/**
 * @param {?proto.dasha.sdk.TextMessage|undefined} value
 * @return {!proto.dasha.sdk.TextProtocolMessage} returns this
*/
proto.dasha.sdk.TextProtocolMessage.prototype.setText = function (value) {
    return jspb.Message.setOneofWrapperField(this, 2, proto.dasha.sdk.TextProtocolMessage.oneofGroups_[0], value);
};
/**
 * Clears the message field making it undefined.
 * @return {!proto.dasha.sdk.TextProtocolMessage} returns this
 */
proto.dasha.sdk.TextProtocolMessage.prototype.clearText = function () {
    return this.setText(undefined);
};
/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.dasha.sdk.TextProtocolMessage.prototype.hasText = function () {
    return jspb.Message.getField(this, 2) != null;
};
/**
 * optional ClosedSessionMessage closed = 3;
 * @return {?proto.dasha.sdk.ClosedSessionMessage}
 */
proto.dasha.sdk.TextProtocolMessage.prototype.getClosed = function () {
    return /** @type{?proto.dasha.sdk.ClosedSessionMessage} */ (jspb.Message.getWrapperField(this, proto.dasha.sdk.ClosedSessionMessage, 3));
};
/**
 * @param {?proto.dasha.sdk.ClosedSessionMessage|undefined} value
 * @return {!proto.dasha.sdk.TextProtocolMessage} returns this
*/
proto.dasha.sdk.TextProtocolMessage.prototype.setClosed = function (value) {
    return jspb.Message.setOneofWrapperField(this, 3, proto.dasha.sdk.TextProtocolMessage.oneofGroups_[0], value);
};
/**
 * Clears the message field making it undefined.
 * @return {!proto.dasha.sdk.TextProtocolMessage} returns this
 */
proto.dasha.sdk.TextProtocolMessage.prototype.clearClosed = function () {
    return this.setClosed(undefined);
};
/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.dasha.sdk.TextProtocolMessage.prototype.hasClosed = function () {
    return jspb.Message.getField(this, 3) != null;
};
if (jspb.Message.GENERATE_TO_OBJECT) {
    /**
     * Creates an object representation of this proto.
     * Field names that are reserved in JavaScript and will be renamed to pb_name.
     * Optional fields that are not set will be set to undefined.
     * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
     * For the list of reserved names please see:
     *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
     * @param {boolean=} opt_includeInstance Deprecated. whether to include the
     *     JSPB instance for transitional soy proto support:
     *     http://goto/soy-param-migration
     * @return {!Object}
     */
    proto.dasha.sdk.TextProtocolStreamInit.prototype.toObject = function (opt_includeInstance) {
        return proto.dasha.sdk.TextProtocolStreamInit.toObject(opt_includeInstance, this);
    };
    /**
     * Static version of the {@see toObject} method.
     * @param {boolean|undefined} includeInstance Deprecated. Whether to include
     *     the JSPB instance for transitional soy proto support:
     *     http://goto/soy-param-migration
     * @param {!proto.dasha.sdk.TextProtocolStreamInit} msg The msg instance to transform.
     * @return {!Object}
     * @suppress {unusedLocalVariables} f is only used for nested messages
     */
    proto.dasha.sdk.TextProtocolStreamInit.toObject = function (includeInstance, msg) {
        var f, obj = {
            jobId: jspb.Message.getFieldWithDefault(msg, 1, "")
        };
        if (includeInstance) {
            obj.$jspbMessageInstance = msg;
        }
        return obj;
    };
}
/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.dasha.sdk.TextProtocolStreamInit}
 */
proto.dasha.sdk.TextProtocolStreamInit.deserializeBinary = function (bytes) {
    var reader = new jspb.BinaryReader(bytes);
    var msg = new proto.dasha.sdk.TextProtocolStreamInit;
    return proto.dasha.sdk.TextProtocolStreamInit.deserializeBinaryFromReader(msg, reader);
};
/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.dasha.sdk.TextProtocolStreamInit} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.dasha.sdk.TextProtocolStreamInit}
 */
proto.dasha.sdk.TextProtocolStreamInit.deserializeBinaryFromReader = function (msg, reader) {
    while (reader.nextField()) {
        if (reader.isEndGroup()) {
            break;
        }
        var field = reader.getFieldNumber();
        switch (field) {
            case 1:
                var value = /** @type {string} */ (reader.readString());
                msg.setJobId(value);
                break;
            default:
                reader.skipField();
                break;
        }
    }
    return msg;
};
/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.dasha.sdk.TextProtocolStreamInit.prototype.serializeBinary = function () {
    var writer = new jspb.BinaryWriter();
    proto.dasha.sdk.TextProtocolStreamInit.serializeBinaryToWriter(this, writer);
    return writer.getResultBuffer();
};
/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.dasha.sdk.TextProtocolStreamInit} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.dasha.sdk.TextProtocolStreamInit.serializeBinaryToWriter = function (message, writer) {
    var f = undefined;
    f = message.getJobId();
    if (f.length > 0) {
        writer.writeString(1, f);
    }
};
/**
 * optional string job_id = 1;
 * @return {string}
 */
proto.dasha.sdk.TextProtocolStreamInit.prototype.getJobId = function () {
    return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};
/**
 * @param {string} value
 * @return {!proto.dasha.sdk.TextProtocolStreamInit} returns this
 */
proto.dasha.sdk.TextProtocolStreamInit.prototype.setJobId = function (value) {
    return jspb.Message.setProto3StringField(this, 1, value);
};
if (jspb.Message.GENERATE_TO_OBJECT) {
    /**
     * Creates an object representation of this proto.
     * Field names that are reserved in JavaScript and will be renamed to pb_name.
     * Optional fields that are not set will be set to undefined.
     * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
     * For the list of reserved names please see:
     *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
     * @param {boolean=} opt_includeInstance Deprecated. whether to include the
     *     JSPB instance for transitional soy proto support:
     *     http://goto/soy-param-migration
     * @return {!Object}
     */
    proto.dasha.sdk.RegisterRequest.prototype.toObject = function (opt_includeInstance) {
        return proto.dasha.sdk.RegisterRequest.toObject(opt_includeInstance, this);
    };
    /**
     * Static version of the {@see toObject} method.
     * @param {boolean|undefined} includeInstance Deprecated. Whether to include
     *     the JSPB instance for transitional soy proto support:
     *     http://goto/soy-param-migration
     * @param {!proto.dasha.sdk.RegisterRequest} msg The msg instance to transform.
     * @return {!Object}
     * @suppress {unusedLocalVariables} f is only used for nested messages
     */
    proto.dasha.sdk.RegisterRequest.toObject = function (includeInstance, msg) {
        var f, obj = {
            app: msg.getApp_asB64(),
            concurrency: jspb.Message.getFieldWithDefault(msg, 2, 0),
            groupid: jspb.Message.getFieldWithDefault(msg, 3, ""),
            sdkVersion: jspb.Message.getFieldWithDefault(msg, 4, "")
        };
        if (includeInstance) {
            obj.$jspbMessageInstance = msg;
        }
        return obj;
    };
}
/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.dasha.sdk.RegisterRequest}
 */
proto.dasha.sdk.RegisterRequest.deserializeBinary = function (bytes) {
    var reader = new jspb.BinaryReader(bytes);
    var msg = new proto.dasha.sdk.RegisterRequest;
    return proto.dasha.sdk.RegisterRequest.deserializeBinaryFromReader(msg, reader);
};
/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.dasha.sdk.RegisterRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.dasha.sdk.RegisterRequest}
 */
proto.dasha.sdk.RegisterRequest.deserializeBinaryFromReader = function (msg, reader) {
    while (reader.nextField()) {
        if (reader.isEndGroup()) {
            break;
        }
        var field = reader.getFieldNumber();
        switch (field) {
            case 1:
                var value = /** @type {!Uint8Array} */ (reader.readBytes());
                msg.setApp(value);
                break;
            case 2:
                var value = /** @type {number} */ (reader.readUint32());
                msg.setConcurrency(value);
                break;
            case 3:
                var value = /** @type {string} */ (reader.readString());
                msg.setGroupid(value);
                break;
            case 4:
                var value = /** @type {string} */ (reader.readString());
                msg.setSdkVersion(value);
                break;
            default:
                reader.skipField();
                break;
        }
    }
    return msg;
};
/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.dasha.sdk.RegisterRequest.prototype.serializeBinary = function () {
    var writer = new jspb.BinaryWriter();
    proto.dasha.sdk.RegisterRequest.serializeBinaryToWriter(this, writer);
    return writer.getResultBuffer();
};
/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.dasha.sdk.RegisterRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.dasha.sdk.RegisterRequest.serializeBinaryToWriter = function (message, writer) {
    var f = undefined;
    f = message.getApp_asU8();
    if (f.length > 0) {
        writer.writeBytes(1, f);
    }
    f = message.getConcurrency();
    if (f !== 0) {
        writer.writeUint32(2, f);
    }
    f = message.getGroupid();
    if (f.length > 0) {
        writer.writeString(3, f);
    }
    f = message.getSdkVersion();
    if (f.length > 0) {
        writer.writeString(4, f);
    }
};
/**
 * optional bytes app = 1;
 * @return {!(string|Uint8Array)}
 */
proto.dasha.sdk.RegisterRequest.prototype.getApp = function () {
    return /** @type {!(string|Uint8Array)} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};
/**
 * optional bytes app = 1;
 * This is a type-conversion wrapper around `getApp()`
 * @return {string}
 */
proto.dasha.sdk.RegisterRequest.prototype.getApp_asB64 = function () {
    return /** @type {string} */ (jspb.Message.bytesAsB64(this.getApp()));
};
/**
 * optional bytes app = 1;
 * Note that Uint8Array is not supported on all browsers.
 * @see http://caniuse.com/Uint8Array
 * This is a type-conversion wrapper around `getApp()`
 * @return {!Uint8Array}
 */
proto.dasha.sdk.RegisterRequest.prototype.getApp_asU8 = function () {
    return /** @type {!Uint8Array} */ (jspb.Message.bytesAsU8(this.getApp()));
};
/**
 * @param {!(string|Uint8Array)} value
 * @return {!proto.dasha.sdk.RegisterRequest} returns this
 */
proto.dasha.sdk.RegisterRequest.prototype.setApp = function (value) {
    return jspb.Message.setProto3BytesField(this, 1, value);
};
/**
 * optional uint32 concurrency = 2;
 * @return {number}
 */
proto.dasha.sdk.RegisterRequest.prototype.getConcurrency = function () {
    return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 2, 0));
};
/**
 * @param {number} value
 * @return {!proto.dasha.sdk.RegisterRequest} returns this
 */
proto.dasha.sdk.RegisterRequest.prototype.setConcurrency = function (value) {
    return jspb.Message.setProto3IntField(this, 2, value);
};
/**
 * optional string groupId = 3;
 * @return {string}
 */
proto.dasha.sdk.RegisterRequest.prototype.getGroupid = function () {
    return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 3, ""));
};
/**
 * @param {string} value
 * @return {!proto.dasha.sdk.RegisterRequest} returns this
 */
proto.dasha.sdk.RegisterRequest.prototype.setGroupid = function (value) {
    return jspb.Message.setProto3StringField(this, 3, value);
};
/**
 * optional string sdk_version = 4;
 * @return {string}
 */
proto.dasha.sdk.RegisterRequest.prototype.getSdkVersion = function () {
    return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 4, ""));
};
/**
 * @param {string} value
 * @return {!proto.dasha.sdk.RegisterRequest} returns this
 */
proto.dasha.sdk.RegisterRequest.prototype.setSdkVersion = function (value) {
    return jspb.Message.setProto3StringField(this, 4, value);
};
/**
 * Oneof group definitions for this message. Each group defines the field
 * numbers belonging to that group. When of these fields' value is set, all
 * other fields in the group are cleared. During deserialization, if multiple
 * fields are encountered for a group, only the last value seen will be kept.
 * @private {!Array<!Array<number>>}
 * @const
 */
proto.dasha.sdk.RegisterResponse.oneofGroups_ = [[1, 2]];
/**
 * @enum {number}
 */
proto.dasha.sdk.RegisterResponse.ResponseCase = {
    RESPONSE_NOT_SET: 0,
    ERROR: 1,
    SUCCESS: 2
};
/**
 * @return {proto.dasha.sdk.RegisterResponse.ResponseCase}
 */
proto.dasha.sdk.RegisterResponse.prototype.getResponseCase = function () {
    return /** @type {proto.dasha.sdk.RegisterResponse.ResponseCase} */ (jspb.Message.computeOneofCase(this, proto.dasha.sdk.RegisterResponse.oneofGroups_[0]));
};
if (jspb.Message.GENERATE_TO_OBJECT) {
    /**
     * Creates an object representation of this proto.
     * Field names that are reserved in JavaScript and will be renamed to pb_name.
     * Optional fields that are not set will be set to undefined.
     * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
     * For the list of reserved names please see:
     *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
     * @param {boolean=} opt_includeInstance Deprecated. whether to include the
     *     JSPB instance for transitional soy proto support:
     *     http://goto/soy-param-migration
     * @return {!Object}
     */
    proto.dasha.sdk.RegisterResponse.prototype.toObject = function (opt_includeInstance) {
        return proto.dasha.sdk.RegisterResponse.toObject(opt_includeInstance, this);
    };
    /**
     * Static version of the {@see toObject} method.
     * @param {boolean|undefined} includeInstance Deprecated. Whether to include
     *     the JSPB instance for transitional soy proto support:
     *     http://goto/soy-param-migration
     * @param {!proto.dasha.sdk.RegisterResponse} msg The msg instance to transform.
     * @return {!Object}
     * @suppress {unusedLocalVariables} f is only used for nested messages
     */
    proto.dasha.sdk.RegisterResponse.toObject = function (includeInstance, msg) {
        var f, obj = {
            error: (f = msg.getError()) && proto.dasha.sdk.RegistrationError.toObject(includeInstance, f),
            success: (f = msg.getSuccess()) && proto.dasha.sdk.RegistrationSuccess.toObject(includeInstance, f)
        };
        if (includeInstance) {
            obj.$jspbMessageInstance = msg;
        }
        return obj;
    };
}
/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.dasha.sdk.RegisterResponse}
 */
proto.dasha.sdk.RegisterResponse.deserializeBinary = function (bytes) {
    var reader = new jspb.BinaryReader(bytes);
    var msg = new proto.dasha.sdk.RegisterResponse;
    return proto.dasha.sdk.RegisterResponse.deserializeBinaryFromReader(msg, reader);
};
/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.dasha.sdk.RegisterResponse} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.dasha.sdk.RegisterResponse}
 */
proto.dasha.sdk.RegisterResponse.deserializeBinaryFromReader = function (msg, reader) {
    while (reader.nextField()) {
        if (reader.isEndGroup()) {
            break;
        }
        var field = reader.getFieldNumber();
        switch (field) {
            case 1:
                var value = new proto.dasha.sdk.RegistrationError;
                reader.readMessage(value, proto.dasha.sdk.RegistrationError.deserializeBinaryFromReader);
                msg.setError(value);
                break;
            case 2:
                var value = new proto.dasha.sdk.RegistrationSuccess;
                reader.readMessage(value, proto.dasha.sdk.RegistrationSuccess.deserializeBinaryFromReader);
                msg.setSuccess(value);
                break;
            default:
                reader.skipField();
                break;
        }
    }
    return msg;
};
/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.dasha.sdk.RegisterResponse.prototype.serializeBinary = function () {
    var writer = new jspb.BinaryWriter();
    proto.dasha.sdk.RegisterResponse.serializeBinaryToWriter(this, writer);
    return writer.getResultBuffer();
};
/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.dasha.sdk.RegisterResponse} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.dasha.sdk.RegisterResponse.serializeBinaryToWriter = function (message, writer) {
    var f = undefined;
    f = message.getError();
    if (f != null) {
        writer.writeMessage(1, f, proto.dasha.sdk.RegistrationError.serializeBinaryToWriter);
    }
    f = message.getSuccess();
    if (f != null) {
        writer.writeMessage(2, f, proto.dasha.sdk.RegistrationSuccess.serializeBinaryToWriter);
    }
};
/**
 * optional RegistrationError error = 1;
 * @return {?proto.dasha.sdk.RegistrationError}
 */
proto.dasha.sdk.RegisterResponse.prototype.getError = function () {
    return /** @type{?proto.dasha.sdk.RegistrationError} */ (jspb.Message.getWrapperField(this, proto.dasha.sdk.RegistrationError, 1));
};
/**
 * @param {?proto.dasha.sdk.RegistrationError|undefined} value
 * @return {!proto.dasha.sdk.RegisterResponse} returns this
*/
proto.dasha.sdk.RegisterResponse.prototype.setError = function (value) {
    return jspb.Message.setOneofWrapperField(this, 1, proto.dasha.sdk.RegisterResponse.oneofGroups_[0], value);
};
/**
 * Clears the message field making it undefined.
 * @return {!proto.dasha.sdk.RegisterResponse} returns this
 */
proto.dasha.sdk.RegisterResponse.prototype.clearError = function () {
    return this.setError(undefined);
};
/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.dasha.sdk.RegisterResponse.prototype.hasError = function () {
    return jspb.Message.getField(this, 1) != null;
};
/**
 * optional RegistrationSuccess success = 2;
 * @return {?proto.dasha.sdk.RegistrationSuccess}
 */
proto.dasha.sdk.RegisterResponse.prototype.getSuccess = function () {
    return /** @type{?proto.dasha.sdk.RegistrationSuccess} */ (jspb.Message.getWrapperField(this, proto.dasha.sdk.RegistrationSuccess, 2));
};
/**
 * @param {?proto.dasha.sdk.RegistrationSuccess|undefined} value
 * @return {!proto.dasha.sdk.RegisterResponse} returns this
*/
proto.dasha.sdk.RegisterResponse.prototype.setSuccess = function (value) {
    return jspb.Message.setOneofWrapperField(this, 2, proto.dasha.sdk.RegisterResponse.oneofGroups_[0], value);
};
/**
 * Clears the message field making it undefined.
 * @return {!proto.dasha.sdk.RegisterResponse} returns this
 */
proto.dasha.sdk.RegisterResponse.prototype.clearSuccess = function () {
    return this.setSuccess(undefined);
};
/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.dasha.sdk.RegisterResponse.prototype.hasSuccess = function () {
    return jspb.Message.getField(this, 2) != null;
};
if (jspb.Message.GENERATE_TO_OBJECT) {
    /**
     * Creates an object representation of this proto.
     * Field names that are reserved in JavaScript and will be renamed to pb_name.
     * Optional fields that are not set will be set to undefined.
     * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
     * For the list of reserved names please see:
     *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
     * @param {boolean=} opt_includeInstance Deprecated. whether to include the
     *     JSPB instance for transitional soy proto support:
     *     http://goto/soy-param-migration
     * @return {!Object}
     */
    proto.dasha.sdk.RegistrationSuccess.prototype.toObject = function (opt_includeInstance) {
        return proto.dasha.sdk.RegistrationSuccess.toObject(opt_includeInstance, this);
    };
    /**
     * Static version of the {@see toObject} method.
     * @param {boolean|undefined} includeInstance Deprecated. Whether to include
     *     the JSPB instance for transitional soy proto support:
     *     http://goto/soy-param-migration
     * @param {!proto.dasha.sdk.RegistrationSuccess} msg The msg instance to transform.
     * @return {!Object}
     * @suppress {unusedLocalVariables} f is only used for nested messages
     */
    proto.dasha.sdk.RegistrationSuccess.toObject = function (includeInstance, msg) {
        var f, obj = {
            instanceId: jspb.Message.getFieldWithDefault(msg, 1, ""),
            appId: jspb.Message.getFieldWithDefault(msg, 2, "")
        };
        if (includeInstance) {
            obj.$jspbMessageInstance = msg;
        }
        return obj;
    };
}
/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.dasha.sdk.RegistrationSuccess}
 */
proto.dasha.sdk.RegistrationSuccess.deserializeBinary = function (bytes) {
    var reader = new jspb.BinaryReader(bytes);
    var msg = new proto.dasha.sdk.RegistrationSuccess;
    return proto.dasha.sdk.RegistrationSuccess.deserializeBinaryFromReader(msg, reader);
};
/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.dasha.sdk.RegistrationSuccess} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.dasha.sdk.RegistrationSuccess}
 */
proto.dasha.sdk.RegistrationSuccess.deserializeBinaryFromReader = function (msg, reader) {
    while (reader.nextField()) {
        if (reader.isEndGroup()) {
            break;
        }
        var field = reader.getFieldNumber();
        switch (field) {
            case 1:
                var value = /** @type {string} */ (reader.readString());
                msg.setInstanceId(value);
                break;
            case 2:
                var value = /** @type {string} */ (reader.readString());
                msg.setAppId(value);
                break;
            default:
                reader.skipField();
                break;
        }
    }
    return msg;
};
/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.dasha.sdk.RegistrationSuccess.prototype.serializeBinary = function () {
    var writer = new jspb.BinaryWriter();
    proto.dasha.sdk.RegistrationSuccess.serializeBinaryToWriter(this, writer);
    return writer.getResultBuffer();
};
/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.dasha.sdk.RegistrationSuccess} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.dasha.sdk.RegistrationSuccess.serializeBinaryToWriter = function (message, writer) {
    var f = undefined;
    f = message.getInstanceId();
    if (f.length > 0) {
        writer.writeString(1, f);
    }
    f = message.getAppId();
    if (f.length > 0) {
        writer.writeString(2, f);
    }
};
/**
 * optional string instance_id = 1;
 * @return {string}
 */
proto.dasha.sdk.RegistrationSuccess.prototype.getInstanceId = function () {
    return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};
/**
 * @param {string} value
 * @return {!proto.dasha.sdk.RegistrationSuccess} returns this
 */
proto.dasha.sdk.RegistrationSuccess.prototype.setInstanceId = function (value) {
    return jspb.Message.setProto3StringField(this, 1, value);
};
/**
 * optional string app_id = 2;
 * @return {string}
 */
proto.dasha.sdk.RegistrationSuccess.prototype.getAppId = function () {
    return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};
/**
 * @param {string} value
 * @return {!proto.dasha.sdk.RegistrationSuccess} returns this
 */
proto.dasha.sdk.RegistrationSuccess.prototype.setAppId = function (value) {
    return jspb.Message.setProto3StringField(this, 2, value);
};
if (jspb.Message.GENERATE_TO_OBJECT) {
    /**
     * Creates an object representation of this proto.
     * Field names that are reserved in JavaScript and will be renamed to pb_name.
     * Optional fields that are not set will be set to undefined.
     * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
     * For the list of reserved names please see:
     *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
     * @param {boolean=} opt_includeInstance Deprecated. whether to include the
     *     JSPB instance for transitional soy proto support:
     *     http://goto/soy-param-migration
     * @return {!Object}
     */
    proto.dasha.sdk.RegistrationError.prototype.toObject = function (opt_includeInstance) {
        return proto.dasha.sdk.RegistrationError.toObject(opt_includeInstance, this);
    };
    /**
     * Static version of the {@see toObject} method.
     * @param {boolean|undefined} includeInstance Deprecated. Whether to include
     *     the JSPB instance for transitional soy proto support:
     *     http://goto/soy-param-migration
     * @param {!proto.dasha.sdk.RegistrationError} msg The msg instance to transform.
     * @return {!Object}
     * @suppress {unusedLocalVariables} f is only used for nested messages
     */
    proto.dasha.sdk.RegistrationError.toObject = function (includeInstance, msg) {
        var f, obj = {
            errorCode: jspb.Message.getFieldWithDefault(msg, 1, 0),
            errorDetails: jspb.Message.getFieldWithDefault(msg, 2, "")
        };
        if (includeInstance) {
            obj.$jspbMessageInstance = msg;
        }
        return obj;
    };
}
/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.dasha.sdk.RegistrationError}
 */
proto.dasha.sdk.RegistrationError.deserializeBinary = function (bytes) {
    var reader = new jspb.BinaryReader(bytes);
    var msg = new proto.dasha.sdk.RegistrationError;
    return proto.dasha.sdk.RegistrationError.deserializeBinaryFromReader(msg, reader);
};
/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.dasha.sdk.RegistrationError} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.dasha.sdk.RegistrationError}
 */
proto.dasha.sdk.RegistrationError.deserializeBinaryFromReader = function (msg, reader) {
    while (reader.nextField()) {
        if (reader.isEndGroup()) {
            break;
        }
        var field = reader.getFieldNumber();
        switch (field) {
            case 1:
                var value = /** @type {number} */ (reader.readInt32());
                msg.setErrorCode(value);
                break;
            case 2:
                var value = /** @type {string} */ (reader.readString());
                msg.setErrorDetails(value);
                break;
            default:
                reader.skipField();
                break;
        }
    }
    return msg;
};
/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.dasha.sdk.RegistrationError.prototype.serializeBinary = function () {
    var writer = new jspb.BinaryWriter();
    proto.dasha.sdk.RegistrationError.serializeBinaryToWriter(this, writer);
    return writer.getResultBuffer();
};
/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.dasha.sdk.RegistrationError} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.dasha.sdk.RegistrationError.serializeBinaryToWriter = function (message, writer) {
    var f = undefined;
    f = message.getErrorCode();
    if (f !== 0) {
        writer.writeInt32(1, f);
    }
    f = message.getErrorDetails();
    if (f.length > 0) {
        writer.writeString(2, f);
    }
};
/**
 * optional int32 error_code = 1;
 * @return {number}
 */
proto.dasha.sdk.RegistrationError.prototype.getErrorCode = function () {
    return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 1, 0));
};
/**
 * @param {number} value
 * @return {!proto.dasha.sdk.RegistrationError} returns this
 */
proto.dasha.sdk.RegistrationError.prototype.setErrorCode = function (value) {
    return jspb.Message.setProto3IntField(this, 1, value);
};
/**
 * optional string error_details = 2;
 * @return {string}
 */
proto.dasha.sdk.RegistrationError.prototype.getErrorDetails = function () {
    return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};
/**
 * @param {string} value
 * @return {!proto.dasha.sdk.RegistrationError} returns this
 */
proto.dasha.sdk.RegistrationError.prototype.setErrorDetails = function (value) {
    return jspb.Message.setProto3StringField(this, 2, value);
};
if (jspb.Message.GENERATE_TO_OBJECT) {
    /**
     * Creates an object representation of this proto.
     * Field names that are reserved in JavaScript and will be renamed to pb_name.
     * Optional fields that are not set will be set to undefined.
     * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
     * For the list of reserved names please see:
     *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
     * @param {boolean=} opt_includeInstance Deprecated. whether to include the
     *     JSPB instance for transitional soy proto support:
     *     http://goto/soy-param-migration
     * @return {!Object}
     */
    proto.dasha.sdk.AddSessionConfigRequest.prototype.toObject = function (opt_includeInstance) {
        return proto.dasha.sdk.AddSessionConfigRequest.toObject(opt_includeInstance, this);
    };
    /**
     * Static version of the {@see toObject} method.
     * @param {boolean|undefined} includeInstance Deprecated. Whether to include
     *     the JSPB instance for transitional soy proto support:
     *     http://goto/soy-param-migration
     * @param {!proto.dasha.sdk.AddSessionConfigRequest} msg The msg instance to transform.
     * @return {!Object}
     * @suppress {unusedLocalVariables} f is only used for nested messages
     */
    proto.dasha.sdk.AddSessionConfigRequest.toObject = function (includeInstance, msg) {
        var f, obj = {
            instanceId: jspb.Message.getFieldWithDefault(msg, 1, ""),
            configName: jspb.Message.getFieldWithDefault(msg, 2, ""),
            config: msg.getConfig_asB64()
        };
        if (includeInstance) {
            obj.$jspbMessageInstance = msg;
        }
        return obj;
    };
}
/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.dasha.sdk.AddSessionConfigRequest}
 */
proto.dasha.sdk.AddSessionConfigRequest.deserializeBinary = function (bytes) {
    var reader = new jspb.BinaryReader(bytes);
    var msg = new proto.dasha.sdk.AddSessionConfigRequest;
    return proto.dasha.sdk.AddSessionConfigRequest.deserializeBinaryFromReader(msg, reader);
};
/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.dasha.sdk.AddSessionConfigRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.dasha.sdk.AddSessionConfigRequest}
 */
proto.dasha.sdk.AddSessionConfigRequest.deserializeBinaryFromReader = function (msg, reader) {
    while (reader.nextField()) {
        if (reader.isEndGroup()) {
            break;
        }
        var field = reader.getFieldNumber();
        switch (field) {
            case 1:
                var value = /** @type {string} */ (reader.readString());
                msg.setInstanceId(value);
                break;
            case 2:
                var value = /** @type {string} */ (reader.readString());
                msg.setConfigName(value);
                break;
            case 3:
                var value = /** @type {!Uint8Array} */ (reader.readBytes());
                msg.setConfig(value);
                break;
            default:
                reader.skipField();
                break;
        }
    }
    return msg;
};
/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.dasha.sdk.AddSessionConfigRequest.prototype.serializeBinary = function () {
    var writer = new jspb.BinaryWriter();
    proto.dasha.sdk.AddSessionConfigRequest.serializeBinaryToWriter(this, writer);
    return writer.getResultBuffer();
};
/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.dasha.sdk.AddSessionConfigRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.dasha.sdk.AddSessionConfigRequest.serializeBinaryToWriter = function (message, writer) {
    var f = undefined;
    f = message.getInstanceId();
    if (f.length > 0) {
        writer.writeString(1, f);
    }
    f = message.getConfigName();
    if (f.length > 0) {
        writer.writeString(2, f);
    }
    f = message.getConfig_asU8();
    if (f.length > 0) {
        writer.writeBytes(3, f);
    }
};
/**
 * optional string instance_id = 1;
 * @return {string}
 */
proto.dasha.sdk.AddSessionConfigRequest.prototype.getInstanceId = function () {
    return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};
/**
 * @param {string} value
 * @return {!proto.dasha.sdk.AddSessionConfigRequest} returns this
 */
proto.dasha.sdk.AddSessionConfigRequest.prototype.setInstanceId = function (value) {
    return jspb.Message.setProto3StringField(this, 1, value);
};
/**
 * optional string config_name = 2;
 * @return {string}
 */
proto.dasha.sdk.AddSessionConfigRequest.prototype.getConfigName = function () {
    return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};
/**
 * @param {string} value
 * @return {!proto.dasha.sdk.AddSessionConfigRequest} returns this
 */
proto.dasha.sdk.AddSessionConfigRequest.prototype.setConfigName = function (value) {
    return jspb.Message.setProto3StringField(this, 2, value);
};
/**
 * optional bytes config = 3;
 * @return {!(string|Uint8Array)}
 */
proto.dasha.sdk.AddSessionConfigRequest.prototype.getConfig = function () {
    return /** @type {!(string|Uint8Array)} */ (jspb.Message.getFieldWithDefault(this, 3, ""));
};
/**
 * optional bytes config = 3;
 * This is a type-conversion wrapper around `getConfig()`
 * @return {string}
 */
proto.dasha.sdk.AddSessionConfigRequest.prototype.getConfig_asB64 = function () {
    return /** @type {string} */ (jspb.Message.bytesAsB64(this.getConfig()));
};
/**
 * optional bytes config = 3;
 * Note that Uint8Array is not supported on all browsers.
 * @see http://caniuse.com/Uint8Array
 * This is a type-conversion wrapper around `getConfig()`
 * @return {!Uint8Array}
 */
proto.dasha.sdk.AddSessionConfigRequest.prototype.getConfig_asU8 = function () {
    return /** @type {!Uint8Array} */ (jspb.Message.bytesAsU8(this.getConfig()));
};
/**
 * @param {!(string|Uint8Array)} value
 * @return {!proto.dasha.sdk.AddSessionConfigRequest} returns this
 */
proto.dasha.sdk.AddSessionConfigRequest.prototype.setConfig = function (value) {
    return jspb.Message.setProto3BytesField(this, 3, value);
};
if (jspb.Message.GENERATE_TO_OBJECT) {
    /**
     * Creates an object representation of this proto.
     * Field names that are reserved in JavaScript and will be renamed to pb_name.
     * Optional fields that are not set will be set to undefined.
     * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
     * For the list of reserved names please see:
     *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
     * @param {boolean=} opt_includeInstance Deprecated. whether to include the
     *     JSPB instance for transitional soy proto support:
     *     http://goto/soy-param-migration
     * @return {!Object}
     */
    proto.dasha.sdk.AddSessionConfigResponse.prototype.toObject = function (opt_includeInstance) {
        return proto.dasha.sdk.AddSessionConfigResponse.toObject(opt_includeInstance, this);
    };
    /**
     * Static version of the {@see toObject} method.
     * @param {boolean|undefined} includeInstance Deprecated. Whether to include
     *     the JSPB instance for transitional soy proto support:
     *     http://goto/soy-param-migration
     * @param {!proto.dasha.sdk.AddSessionConfigResponse} msg The msg instance to transform.
     * @return {!Object}
     * @suppress {unusedLocalVariables} f is only used for nested messages
     */
    proto.dasha.sdk.AddSessionConfigResponse.toObject = function (includeInstance, msg) {
        var f, obj = {
            configName: jspb.Message.getFieldWithDefault(msg, 1, "")
        };
        if (includeInstance) {
            obj.$jspbMessageInstance = msg;
        }
        return obj;
    };
}
/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.dasha.sdk.AddSessionConfigResponse}
 */
proto.dasha.sdk.AddSessionConfigResponse.deserializeBinary = function (bytes) {
    var reader = new jspb.BinaryReader(bytes);
    var msg = new proto.dasha.sdk.AddSessionConfigResponse;
    return proto.dasha.sdk.AddSessionConfigResponse.deserializeBinaryFromReader(msg, reader);
};
/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.dasha.sdk.AddSessionConfigResponse} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.dasha.sdk.AddSessionConfigResponse}
 */
proto.dasha.sdk.AddSessionConfigResponse.deserializeBinaryFromReader = function (msg, reader) {
    while (reader.nextField()) {
        if (reader.isEndGroup()) {
            break;
        }
        var field = reader.getFieldNumber();
        switch (field) {
            case 1:
                var value = /** @type {string} */ (reader.readString());
                msg.setConfigName(value);
                break;
            default:
                reader.skipField();
                break;
        }
    }
    return msg;
};
/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.dasha.sdk.AddSessionConfigResponse.prototype.serializeBinary = function () {
    var writer = new jspb.BinaryWriter();
    proto.dasha.sdk.AddSessionConfigResponse.serializeBinaryToWriter(this, writer);
    return writer.getResultBuffer();
};
/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.dasha.sdk.AddSessionConfigResponse} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.dasha.sdk.AddSessionConfigResponse.serializeBinaryToWriter = function (message, writer) {
    var f = undefined;
    f = message.getConfigName();
    if (f.length > 0) {
        writer.writeString(1, f);
    }
};
/**
 * optional string config_name = 1;
 * @return {string}
 */
proto.dasha.sdk.AddSessionConfigResponse.prototype.getConfigName = function () {
    return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};
/**
 * @param {string} value
 * @return {!proto.dasha.sdk.AddSessionConfigResponse} returns this
 */
proto.dasha.sdk.AddSessionConfigResponse.prototype.setConfigName = function (value) {
    return jspb.Message.setProto3StringField(this, 1, value);
};
/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.dasha.sdk.EnqueueJobRequest.repeatedFields_ = [2];
if (jspb.Message.GENERATE_TO_OBJECT) {
    /**
     * Creates an object representation of this proto.
     * Field names that are reserved in JavaScript and will be renamed to pb_name.
     * Optional fields that are not set will be set to undefined.
     * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
     * For the list of reserved names please see:
     *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
     * @param {boolean=} opt_includeInstance Deprecated. whether to include the
     *     JSPB instance for transitional soy proto support:
     *     http://goto/soy-param-migration
     * @return {!Object}
     */
    proto.dasha.sdk.EnqueueJobRequest.prototype.toObject = function (opt_includeInstance) {
        return proto.dasha.sdk.EnqueueJobRequest.toObject(opt_includeInstance, this);
    };
    /**
     * Static version of the {@see toObject} method.
     * @param {boolean|undefined} includeInstance Deprecated. Whether to include
     *     the JSPB instance for transitional soy proto support:
     *     http://goto/soy-param-migration
     * @param {!proto.dasha.sdk.EnqueueJobRequest} msg The msg instance to transform.
     * @return {!Object}
     * @suppress {unusedLocalVariables} f is only used for nested messages
     */
    proto.dasha.sdk.EnqueueJobRequest.toObject = function (includeInstance, msg) {
        var f, obj = {
            instanceId: jspb.Message.getFieldWithDefault(msg, 1, ""),
            jobsList: jspb.Message.toObjectList(msg.getJobsList(), proto.dasha.sdk.JobDescription.toObject, includeInstance)
        };
        if (includeInstance) {
            obj.$jspbMessageInstance = msg;
        }
        return obj;
    };
}
/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.dasha.sdk.EnqueueJobRequest}
 */
proto.dasha.sdk.EnqueueJobRequest.deserializeBinary = function (bytes) {
    var reader = new jspb.BinaryReader(bytes);
    var msg = new proto.dasha.sdk.EnqueueJobRequest;
    return proto.dasha.sdk.EnqueueJobRequest.deserializeBinaryFromReader(msg, reader);
};
/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.dasha.sdk.EnqueueJobRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.dasha.sdk.EnqueueJobRequest}
 */
proto.dasha.sdk.EnqueueJobRequest.deserializeBinaryFromReader = function (msg, reader) {
    while (reader.nextField()) {
        if (reader.isEndGroup()) {
            break;
        }
        var field = reader.getFieldNumber();
        switch (field) {
            case 1:
                var value = /** @type {string} */ (reader.readString());
                msg.setInstanceId(value);
                break;
            case 2:
                var value = new proto.dasha.sdk.JobDescription;
                reader.readMessage(value, proto.dasha.sdk.JobDescription.deserializeBinaryFromReader);
                msg.addJobs(value);
                break;
            default:
                reader.skipField();
                break;
        }
    }
    return msg;
};
/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.dasha.sdk.EnqueueJobRequest.prototype.serializeBinary = function () {
    var writer = new jspb.BinaryWriter();
    proto.dasha.sdk.EnqueueJobRequest.serializeBinaryToWriter(this, writer);
    return writer.getResultBuffer();
};
/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.dasha.sdk.EnqueueJobRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.dasha.sdk.EnqueueJobRequest.serializeBinaryToWriter = function (message, writer) {
    var f = undefined;
    f = message.getInstanceId();
    if (f.length > 0) {
        writer.writeString(1, f);
    }
    f = message.getJobsList();
    if (f.length > 0) {
        writer.writeRepeatedMessage(2, f, proto.dasha.sdk.JobDescription.serializeBinaryToWriter);
    }
};
/**
 * optional string instance_id = 1;
 * @return {string}
 */
proto.dasha.sdk.EnqueueJobRequest.prototype.getInstanceId = function () {
    return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};
/**
 * @param {string} value
 * @return {!proto.dasha.sdk.EnqueueJobRequest} returns this
 */
proto.dasha.sdk.EnqueueJobRequest.prototype.setInstanceId = function (value) {
    return jspb.Message.setProto3StringField(this, 1, value);
};
/**
 * repeated JobDescription jobs = 2;
 * @return {!Array<!proto.dasha.sdk.JobDescription>}
 */
proto.dasha.sdk.EnqueueJobRequest.prototype.getJobsList = function () {
    return /** @type{!Array<!proto.dasha.sdk.JobDescription>} */ (jspb.Message.getRepeatedWrapperField(this, proto.dasha.sdk.JobDescription, 2));
};
/**
 * @param {!Array<!proto.dasha.sdk.JobDescription>} value
 * @return {!proto.dasha.sdk.EnqueueJobRequest} returns this
*/
proto.dasha.sdk.EnqueueJobRequest.prototype.setJobsList = function (value) {
    return jspb.Message.setRepeatedWrapperField(this, 2, value);
};
/**
 * @param {!proto.dasha.sdk.JobDescription=} opt_value
 * @param {number=} opt_index
 * @return {!proto.dasha.sdk.JobDescription}
 */
proto.dasha.sdk.EnqueueJobRequest.prototype.addJobs = function (opt_value, opt_index) {
    return jspb.Message.addToRepeatedWrapperField(this, 2, opt_value, proto.dasha.sdk.JobDescription, opt_index);
};
/**
 * Clears the list making it empty but non-null.
 * @return {!proto.dasha.sdk.EnqueueJobRequest} returns this
 */
proto.dasha.sdk.EnqueueJobRequest.prototype.clearJobsList = function () {
    return this.setJobsList([]);
};
if (jspb.Message.GENERATE_TO_OBJECT) {
    /**
     * Creates an object representation of this proto.
     * Field names that are reserved in JavaScript and will be renamed to pb_name.
     * Optional fields that are not set will be set to undefined.
     * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
     * For the list of reserved names please see:
     *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
     * @param {boolean=} opt_includeInstance Deprecated. whether to include the
     *     JSPB instance for transitional soy proto support:
     *     http://goto/soy-param-migration
     * @return {!Object}
     */
    proto.dasha.sdk.JobDescription.prototype.toObject = function (opt_includeInstance) {
        return proto.dasha.sdk.JobDescription.toObject(opt_includeInstance, this);
    };
    /**
     * Static version of the {@see toObject} method.
     * @param {boolean|undefined} includeInstance Deprecated. Whether to include
     *     the JSPB instance for transitional soy proto support:
     *     http://goto/soy-param-migration
     * @param {!proto.dasha.sdk.JobDescription} msg The msg instance to transform.
     * @return {!Object}
     * @suppress {unusedLocalVariables} f is only used for nested messages
     */
    proto.dasha.sdk.JobDescription.toObject = function (includeInstance, msg) {
        var f, obj = {
            jobId: jspb.Message.getFieldWithDefault(msg, 1, ""),
            priority: jspb.Message.getFieldWithDefault(msg, 2, 0),
            notBefore: jspb.Message.getFieldWithDefault(msg, 3, 0),
            notAfter: jspb.Message.getFieldWithDefault(msg, 4, 0)
        };
        if (includeInstance) {
            obj.$jspbMessageInstance = msg;
        }
        return obj;
    };
}
/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.dasha.sdk.JobDescription}
 */
proto.dasha.sdk.JobDescription.deserializeBinary = function (bytes) {
    var reader = new jspb.BinaryReader(bytes);
    var msg = new proto.dasha.sdk.JobDescription;
    return proto.dasha.sdk.JobDescription.deserializeBinaryFromReader(msg, reader);
};
/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.dasha.sdk.JobDescription} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.dasha.sdk.JobDescription}
 */
proto.dasha.sdk.JobDescription.deserializeBinaryFromReader = function (msg, reader) {
    while (reader.nextField()) {
        if (reader.isEndGroup()) {
            break;
        }
        var field = reader.getFieldNumber();
        switch (field) {
            case 1:
                var value = /** @type {string} */ (reader.readString());
                msg.setJobId(value);
                break;
            case 2:
                var value = /** @type {number} */ (reader.readUint32());
                msg.setPriority(value);
                break;
            case 3:
                var value = /** @type {number} */ (reader.readUint64());
                msg.setNotBefore(value);
                break;
            case 4:
                var value = /** @type {number} */ (reader.readUint64());
                msg.setNotAfter(value);
                break;
            default:
                reader.skipField();
                break;
        }
    }
    return msg;
};
/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.dasha.sdk.JobDescription.prototype.serializeBinary = function () {
    var writer = new jspb.BinaryWriter();
    proto.dasha.sdk.JobDescription.serializeBinaryToWriter(this, writer);
    return writer.getResultBuffer();
};
/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.dasha.sdk.JobDescription} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.dasha.sdk.JobDescription.serializeBinaryToWriter = function (message, writer) {
    var f = undefined;
    f = message.getJobId();
    if (f.length > 0) {
        writer.writeString(1, f);
    }
    f = message.getPriority();
    if (f !== 0) {
        writer.writeUint32(2, f);
    }
    f = message.getNotBefore();
    if (f !== 0) {
        writer.writeUint64(3, f);
    }
    f = message.getNotAfter();
    if (f !== 0) {
        writer.writeUint64(4, f);
    }
};
/**
 * optional string job_id = 1;
 * @return {string}
 */
proto.dasha.sdk.JobDescription.prototype.getJobId = function () {
    return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};
/**
 * @param {string} value
 * @return {!proto.dasha.sdk.JobDescription} returns this
 */
proto.dasha.sdk.JobDescription.prototype.setJobId = function (value) {
    return jspb.Message.setProto3StringField(this, 1, value);
};
/**
 * optional uint32 priority = 2;
 * @return {number}
 */
proto.dasha.sdk.JobDescription.prototype.getPriority = function () {
    return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 2, 0));
};
/**
 * @param {number} value
 * @return {!proto.dasha.sdk.JobDescription} returns this
 */
proto.dasha.sdk.JobDescription.prototype.setPriority = function (value) {
    return jspb.Message.setProto3IntField(this, 2, value);
};
/**
 * optional uint64 not_before = 3;
 * @return {number}
 */
proto.dasha.sdk.JobDescription.prototype.getNotBefore = function () {
    return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 3, 0));
};
/**
 * @param {number} value
 * @return {!proto.dasha.sdk.JobDescription} returns this
 */
proto.dasha.sdk.JobDescription.prototype.setNotBefore = function (value) {
    return jspb.Message.setProto3IntField(this, 3, value);
};
/**
 * optional uint64 not_after = 4;
 * @return {number}
 */
proto.dasha.sdk.JobDescription.prototype.getNotAfter = function () {
    return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 4, 0));
};
/**
 * @param {number} value
 * @return {!proto.dasha.sdk.JobDescription} returns this
 */
proto.dasha.sdk.JobDescription.prototype.setNotAfter = function (value) {
    return jspb.Message.setProto3IntField(this, 4, value);
};
/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.dasha.sdk.EnqueueJobResponseArray.repeatedFields_ = [1];
if (jspb.Message.GENERATE_TO_OBJECT) {
    /**
     * Creates an object representation of this proto.
     * Field names that are reserved in JavaScript and will be renamed to pb_name.
     * Optional fields that are not set will be set to undefined.
     * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
     * For the list of reserved names please see:
     *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
     * @param {boolean=} opt_includeInstance Deprecated. whether to include the
     *     JSPB instance for transitional soy proto support:
     *     http://goto/soy-param-migration
     * @return {!Object}
     */
    proto.dasha.sdk.EnqueueJobResponseArray.prototype.toObject = function (opt_includeInstance) {
        return proto.dasha.sdk.EnqueueJobResponseArray.toObject(opt_includeInstance, this);
    };
    /**
     * Static version of the {@see toObject} method.
     * @param {boolean|undefined} includeInstance Deprecated. Whether to include
     *     the JSPB instance for transitional soy proto support:
     *     http://goto/soy-param-migration
     * @param {!proto.dasha.sdk.EnqueueJobResponseArray} msg The msg instance to transform.
     * @return {!Object}
     * @suppress {unusedLocalVariables} f is only used for nested messages
     */
    proto.dasha.sdk.EnqueueJobResponseArray.toObject = function (includeInstance, msg) {
        var f, obj = {
            jobsList: jspb.Message.toObjectList(msg.getJobsList(), proto.dasha.sdk.EnqueueJobResponse.toObject, includeInstance)
        };
        if (includeInstance) {
            obj.$jspbMessageInstance = msg;
        }
        return obj;
    };
}
/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.dasha.sdk.EnqueueJobResponseArray}
 */
proto.dasha.sdk.EnqueueJobResponseArray.deserializeBinary = function (bytes) {
    var reader = new jspb.BinaryReader(bytes);
    var msg = new proto.dasha.sdk.EnqueueJobResponseArray;
    return proto.dasha.sdk.EnqueueJobResponseArray.deserializeBinaryFromReader(msg, reader);
};
/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.dasha.sdk.EnqueueJobResponseArray} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.dasha.sdk.EnqueueJobResponseArray}
 */
proto.dasha.sdk.EnqueueJobResponseArray.deserializeBinaryFromReader = function (msg, reader) {
    while (reader.nextField()) {
        if (reader.isEndGroup()) {
            break;
        }
        var field = reader.getFieldNumber();
        switch (field) {
            case 1:
                var value = new proto.dasha.sdk.EnqueueJobResponse;
                reader.readMessage(value, proto.dasha.sdk.EnqueueJobResponse.deserializeBinaryFromReader);
                msg.addJobs(value);
                break;
            default:
                reader.skipField();
                break;
        }
    }
    return msg;
};
/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.dasha.sdk.EnqueueJobResponseArray.prototype.serializeBinary = function () {
    var writer = new jspb.BinaryWriter();
    proto.dasha.sdk.EnqueueJobResponseArray.serializeBinaryToWriter(this, writer);
    return writer.getResultBuffer();
};
/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.dasha.sdk.EnqueueJobResponseArray} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.dasha.sdk.EnqueueJobResponseArray.serializeBinaryToWriter = function (message, writer) {
    var f = undefined;
    f = message.getJobsList();
    if (f.length > 0) {
        writer.writeRepeatedMessage(1, f, proto.dasha.sdk.EnqueueJobResponse.serializeBinaryToWriter);
    }
};
/**
 * repeated EnqueueJobResponse jobs = 1;
 * @return {!Array<!proto.dasha.sdk.EnqueueJobResponse>}
 */
proto.dasha.sdk.EnqueueJobResponseArray.prototype.getJobsList = function () {
    return /** @type{!Array<!proto.dasha.sdk.EnqueueJobResponse>} */ (jspb.Message.getRepeatedWrapperField(this, proto.dasha.sdk.EnqueueJobResponse, 1));
};
/**
 * @param {!Array<!proto.dasha.sdk.EnqueueJobResponse>} value
 * @return {!proto.dasha.sdk.EnqueueJobResponseArray} returns this
*/
proto.dasha.sdk.EnqueueJobResponseArray.prototype.setJobsList = function (value) {
    return jspb.Message.setRepeatedWrapperField(this, 1, value);
};
/**
 * @param {!proto.dasha.sdk.EnqueueJobResponse=} opt_value
 * @param {number=} opt_index
 * @return {!proto.dasha.sdk.EnqueueJobResponse}
 */
proto.dasha.sdk.EnqueueJobResponseArray.prototype.addJobs = function (opt_value, opt_index) {
    return jspb.Message.addToRepeatedWrapperField(this, 1, opt_value, proto.dasha.sdk.EnqueueJobResponse, opt_index);
};
/**
 * Clears the list making it empty but non-null.
 * @return {!proto.dasha.sdk.EnqueueJobResponseArray} returns this
 */
proto.dasha.sdk.EnqueueJobResponseArray.prototype.clearJobsList = function () {
    return this.setJobsList([]);
};
if (jspb.Message.GENERATE_TO_OBJECT) {
    /**
     * Creates an object representation of this proto.
     * Field names that are reserved in JavaScript and will be renamed to pb_name.
     * Optional fields that are not set will be set to undefined.
     * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
     * For the list of reserved names please see:
     *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
     * @param {boolean=} opt_includeInstance Deprecated. whether to include the
     *     JSPB instance for transitional soy proto support:
     *     http://goto/soy-param-migration
     * @return {!Object}
     */
    proto.dasha.sdk.EnqueueJobResponse.prototype.toObject = function (opt_includeInstance) {
        return proto.dasha.sdk.EnqueueJobResponse.toObject(opt_includeInstance, this);
    };
    /**
     * Static version of the {@see toObject} method.
     * @param {boolean|undefined} includeInstance Deprecated. Whether to include
     *     the JSPB instance for transitional soy proto support:
     *     http://goto/soy-param-migration
     * @param {!proto.dasha.sdk.EnqueueJobResponse} msg The msg instance to transform.
     * @return {!Object}
     * @suppress {unusedLocalVariables} f is only used for nested messages
     */
    proto.dasha.sdk.EnqueueJobResponse.toObject = function (includeInstance, msg) {
        var f, obj = {
            customerJobId: jspb.Message.getFieldWithDefault(msg, 1, ""),
            assignedJobId: jspb.Message.getFieldWithDefault(msg, 2, "")
        };
        if (includeInstance) {
            obj.$jspbMessageInstance = msg;
        }
        return obj;
    };
}
/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.dasha.sdk.EnqueueJobResponse}
 */
proto.dasha.sdk.EnqueueJobResponse.deserializeBinary = function (bytes) {
    var reader = new jspb.BinaryReader(bytes);
    var msg = new proto.dasha.sdk.EnqueueJobResponse;
    return proto.dasha.sdk.EnqueueJobResponse.deserializeBinaryFromReader(msg, reader);
};
/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.dasha.sdk.EnqueueJobResponse} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.dasha.sdk.EnqueueJobResponse}
 */
proto.dasha.sdk.EnqueueJobResponse.deserializeBinaryFromReader = function (msg, reader) {
    while (reader.nextField()) {
        if (reader.isEndGroup()) {
            break;
        }
        var field = reader.getFieldNumber();
        switch (field) {
            case 1:
                var value = /** @type {string} */ (reader.readString());
                msg.setCustomerJobId(value);
                break;
            case 2:
                var value = /** @type {string} */ (reader.readString());
                msg.setAssignedJobId(value);
                break;
            default:
                reader.skipField();
                break;
        }
    }
    return msg;
};
/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.dasha.sdk.EnqueueJobResponse.prototype.serializeBinary = function () {
    var writer = new jspb.BinaryWriter();
    proto.dasha.sdk.EnqueueJobResponse.serializeBinaryToWriter(this, writer);
    return writer.getResultBuffer();
};
/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.dasha.sdk.EnqueueJobResponse} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.dasha.sdk.EnqueueJobResponse.serializeBinaryToWriter = function (message, writer) {
    var f = undefined;
    f = message.getCustomerJobId();
    if (f.length > 0) {
        writer.writeString(1, f);
    }
    f = message.getAssignedJobId();
    if (f.length > 0) {
        writer.writeString(2, f);
    }
};
/**
 * optional string customer_job_id = 1;
 * @return {string}
 */
proto.dasha.sdk.EnqueueJobResponse.prototype.getCustomerJobId = function () {
    return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};
/**
 * @param {string} value
 * @return {!proto.dasha.sdk.EnqueueJobResponse} returns this
 */
proto.dasha.sdk.EnqueueJobResponse.prototype.setCustomerJobId = function (value) {
    return jspb.Message.setProto3StringField(this, 1, value);
};
/**
 * optional string assigned_job_id = 2;
 * @return {string}
 */
proto.dasha.sdk.EnqueueJobResponse.prototype.getAssignedJobId = function () {
    return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};
/**
 * @param {string} value
 * @return {!proto.dasha.sdk.EnqueueJobResponse} returns this
 */
proto.dasha.sdk.EnqueueJobResponse.prototype.setAssignedJobId = function (value) {
    return jspb.Message.setProto3StringField(this, 2, value);
};
if (jspb.Message.GENERATE_TO_OBJECT) {
    /**
     * Creates an object representation of this proto.
     * Field names that are reserved in JavaScript and will be renamed to pb_name.
     * Optional fields that are not set will be set to undefined.
     * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
     * For the list of reserved names please see:
     *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
     * @param {boolean=} opt_includeInstance Deprecated. whether to include the
     *     JSPB instance for transitional soy proto support:
     *     http://goto/soy-param-migration
     * @return {!Object}
     */
    proto.dasha.sdk.JobNotification.prototype.toObject = function (opt_includeInstance) {
        return proto.dasha.sdk.JobNotification.toObject(opt_includeInstance, this);
    };
    /**
     * Static version of the {@see toObject} method.
     * @param {boolean|undefined} includeInstance Deprecated. Whether to include
     *     the JSPB instance for transitional soy proto support:
     *     http://goto/soy-param-migration
     * @param {!proto.dasha.sdk.JobNotification} msg The msg instance to transform.
     * @return {!Object}
     * @suppress {unusedLocalVariables} f is only used for nested messages
     */
    proto.dasha.sdk.JobNotification.toObject = function (includeInstance, msg) {
        var f, obj = {
            assignedJobId: jspb.Message.getFieldWithDefault(msg, 1, ""),
            customerJobId: jspb.Message.getFieldWithDefault(msg, 2, ""),
            data: jspb.Message.getFieldWithDefault(msg, 3, ""),
            status: jspb.Message.getFieldWithDefault(msg, 4, 0)
        };
        if (includeInstance) {
            obj.$jspbMessageInstance = msg;
        }
        return obj;
    };
}
/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.dasha.sdk.JobNotification}
 */
proto.dasha.sdk.JobNotification.deserializeBinary = function (bytes) {
    var reader = new jspb.BinaryReader(bytes);
    var msg = new proto.dasha.sdk.JobNotification;
    return proto.dasha.sdk.JobNotification.deserializeBinaryFromReader(msg, reader);
};
/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.dasha.sdk.JobNotification} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.dasha.sdk.JobNotification}
 */
proto.dasha.sdk.JobNotification.deserializeBinaryFromReader = function (msg, reader) {
    while (reader.nextField()) {
        if (reader.isEndGroup()) {
            break;
        }
        var field = reader.getFieldNumber();
        switch (field) {
            case 1:
                var value = /** @type {string} */ (reader.readString());
                msg.setAssignedJobId(value);
                break;
            case 2:
                var value = /** @type {string} */ (reader.readString());
                msg.setCustomerJobId(value);
                break;
            case 3:
                var value = /** @type {string} */ (reader.readString());
                msg.setData(value);
                break;
            case 4:
                var value = /** @type {!proto.dasha.sdk.JobNotification.JobStatus} */ (reader.readEnum());
                msg.setStatus(value);
                break;
            default:
                reader.skipField();
                break;
        }
    }
    return msg;
};
/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.dasha.sdk.JobNotification.prototype.serializeBinary = function () {
    var writer = new jspb.BinaryWriter();
    proto.dasha.sdk.JobNotification.serializeBinaryToWriter(this, writer);
    return writer.getResultBuffer();
};
/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.dasha.sdk.JobNotification} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.dasha.sdk.JobNotification.serializeBinaryToWriter = function (message, writer) {
    var f = undefined;
    f = message.getAssignedJobId();
    if (f.length > 0) {
        writer.writeString(1, f);
    }
    f = message.getCustomerJobId();
    if (f.length > 0) {
        writer.writeString(2, f);
    }
    f = message.getData();
    if (f.length > 0) {
        writer.writeString(3, f);
    }
    f = message.getStatus();
    if (f !== 0.0) {
        writer.writeEnum(4, f);
    }
};
/**
 * @enum {number}
 */
proto.dasha.sdk.JobNotification.JobStatus = {
    UNSPECIFIED: 0,
    STARTING: 1,
    TIMED_OUT: 2,
    FAILED: 3,
    COMPLETED: 4
};
/**
 * optional string assigned_job_id = 1;
 * @return {string}
 */
proto.dasha.sdk.JobNotification.prototype.getAssignedJobId = function () {
    return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};
/**
 * @param {string} value
 * @return {!proto.dasha.sdk.JobNotification} returns this
 */
proto.dasha.sdk.JobNotification.prototype.setAssignedJobId = function (value) {
    return jspb.Message.setProto3StringField(this, 1, value);
};
/**
 * optional string customer_job_id = 2;
 * @return {string}
 */
proto.dasha.sdk.JobNotification.prototype.getCustomerJobId = function () {
    return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};
/**
 * @param {string} value
 * @return {!proto.dasha.sdk.JobNotification} returns this
 */
proto.dasha.sdk.JobNotification.prototype.setCustomerJobId = function (value) {
    return jspb.Message.setProto3StringField(this, 2, value);
};
/**
 * optional string data = 3;
 * @return {string}
 */
proto.dasha.sdk.JobNotification.prototype.getData = function () {
    return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 3, ""));
};
/**
 * @param {string} value
 * @return {!proto.dasha.sdk.JobNotification} returns this
 */
proto.dasha.sdk.JobNotification.prototype.setData = function (value) {
    return jspb.Message.setProto3StringField(this, 3, value);
};
/**
 * optional JobStatus status = 4;
 * @return {!proto.dasha.sdk.JobNotification.JobStatus}
 */
proto.dasha.sdk.JobNotification.prototype.getStatus = function () {
    return /** @type {!proto.dasha.sdk.JobNotification.JobStatus} */ (jspb.Message.getFieldWithDefault(this, 4, 0));
};
/**
 * @param {!proto.dasha.sdk.JobNotification.JobStatus} value
 * @return {!proto.dasha.sdk.JobNotification} returns this
 */
proto.dasha.sdk.JobNotification.prototype.setStatus = function (value) {
    return jspb.Message.setProto3EnumField(this, 4, value);
};
if (jspb.Message.GENERATE_TO_OBJECT) {
    /**
     * Creates an object representation of this proto.
     * Field names that are reserved in JavaScript and will be renamed to pb_name.
     * Optional fields that are not set will be set to undefined.
     * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
     * For the list of reserved names please see:
     *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
     * @param {boolean=} opt_includeInstance Deprecated. whether to include the
     *     JSPB instance for transitional soy proto support:
     *     http://goto/soy-param-migration
     * @return {!Object}
     */
    proto.dasha.sdk.AcceptJobMessage.prototype.toObject = function (opt_includeInstance) {
        return proto.dasha.sdk.AcceptJobMessage.toObject(opt_includeInstance, this);
    };
    /**
     * Static version of the {@see toObject} method.
     * @param {boolean|undefined} includeInstance Deprecated. Whether to include
     *     the JSPB instance for transitional soy proto support:
     *     http://goto/soy-param-migration
     * @param {!proto.dasha.sdk.AcceptJobMessage} msg The msg instance to transform.
     * @return {!Object}
     * @suppress {unusedLocalVariables} f is only used for nested messages
     */
    proto.dasha.sdk.AcceptJobMessage.toObject = function (includeInstance, msg) {
        var f, obj = {
            instanceId: jspb.Message.getFieldWithDefault(msg, 1, ""),
            jobId: jspb.Message.getFieldWithDefault(msg, 2, ""),
            sessionConfigName: jspb.Message.getFieldWithDefault(msg, 3, ""),
            data: jspb.Message.getFieldWithDefault(msg, 4, "")
        };
        if (includeInstance) {
            obj.$jspbMessageInstance = msg;
        }
        return obj;
    };
}
/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.dasha.sdk.AcceptJobMessage}
 */
proto.dasha.sdk.AcceptJobMessage.deserializeBinary = function (bytes) {
    var reader = new jspb.BinaryReader(bytes);
    var msg = new proto.dasha.sdk.AcceptJobMessage;
    return proto.dasha.sdk.AcceptJobMessage.deserializeBinaryFromReader(msg, reader);
};
/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.dasha.sdk.AcceptJobMessage} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.dasha.sdk.AcceptJobMessage}
 */
proto.dasha.sdk.AcceptJobMessage.deserializeBinaryFromReader = function (msg, reader) {
    while (reader.nextField()) {
        if (reader.isEndGroup()) {
            break;
        }
        var field = reader.getFieldNumber();
        switch (field) {
            case 1:
                var value = /** @type {string} */ (reader.readString());
                msg.setInstanceId(value);
                break;
            case 2:
                var value = /** @type {string} */ (reader.readString());
                msg.setJobId(value);
                break;
            case 3:
                var value = /** @type {string} */ (reader.readString());
                msg.setSessionConfigName(value);
                break;
            case 4:
                var value = /** @type {string} */ (reader.readString());
                msg.setData(value);
                break;
            default:
                reader.skipField();
                break;
        }
    }
    return msg;
};
/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.dasha.sdk.AcceptJobMessage.prototype.serializeBinary = function () {
    var writer = new jspb.BinaryWriter();
    proto.dasha.sdk.AcceptJobMessage.serializeBinaryToWriter(this, writer);
    return writer.getResultBuffer();
};
/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.dasha.sdk.AcceptJobMessage} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.dasha.sdk.AcceptJobMessage.serializeBinaryToWriter = function (message, writer) {
    var f = undefined;
    f = message.getInstanceId();
    if (f.length > 0) {
        writer.writeString(1, f);
    }
    f = message.getJobId();
    if (f.length > 0) {
        writer.writeString(2, f);
    }
    f = message.getSessionConfigName();
    if (f.length > 0) {
        writer.writeString(3, f);
    }
    f = message.getData();
    if (f.length > 0) {
        writer.writeString(4, f);
    }
};
/**
 * optional string instance_id = 1;
 * @return {string}
 */
proto.dasha.sdk.AcceptJobMessage.prototype.getInstanceId = function () {
    return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};
/**
 * @param {string} value
 * @return {!proto.dasha.sdk.AcceptJobMessage} returns this
 */
proto.dasha.sdk.AcceptJobMessage.prototype.setInstanceId = function (value) {
    return jspb.Message.setProto3StringField(this, 1, value);
};
/**
 * optional string job_id = 2;
 * @return {string}
 */
proto.dasha.sdk.AcceptJobMessage.prototype.getJobId = function () {
    return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};
/**
 * @param {string} value
 * @return {!proto.dasha.sdk.AcceptJobMessage} returns this
 */
proto.dasha.sdk.AcceptJobMessage.prototype.setJobId = function (value) {
    return jspb.Message.setProto3StringField(this, 2, value);
};
/**
 * optional string session_config_name = 3;
 * @return {string}
 */
proto.dasha.sdk.AcceptJobMessage.prototype.getSessionConfigName = function () {
    return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 3, ""));
};
/**
 * @param {string} value
 * @return {!proto.dasha.sdk.AcceptJobMessage} returns this
 */
proto.dasha.sdk.AcceptJobMessage.prototype.setSessionConfigName = function (value) {
    return jspb.Message.setProto3StringField(this, 3, value);
};
/**
 * optional string data = 4;
 * @return {string}
 */
proto.dasha.sdk.AcceptJobMessage.prototype.getData = function () {
    return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 4, ""));
};
/**
 * @param {string} value
 * @return {!proto.dasha.sdk.AcceptJobMessage} returns this
 */
proto.dasha.sdk.AcceptJobMessage.prototype.setData = function (value) {
    return jspb.Message.setProto3StringField(this, 4, value);
};
if (jspb.Message.GENERATE_TO_OBJECT) {
    /**
     * Creates an object representation of this proto.
     * Field names that are reserved in JavaScript and will be renamed to pb_name.
     * Optional fields that are not set will be set to undefined.
     * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
     * For the list of reserved names please see:
     *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
     * @param {boolean=} opt_includeInstance Deprecated. whether to include the
     *     JSPB instance for transitional soy proto support:
     *     http://goto/soy-param-migration
     * @return {!Object}
     */
    proto.dasha.sdk.RejectJobMessage.prototype.toObject = function (opt_includeInstance) {
        return proto.dasha.sdk.RejectJobMessage.toObject(opt_includeInstance, this);
    };
    /**
     * Static version of the {@see toObject} method.
     * @param {boolean|undefined} includeInstance Deprecated. Whether to include
     *     the JSPB instance for transitional soy proto support:
     *     http://goto/soy-param-migration
     * @param {!proto.dasha.sdk.RejectJobMessage} msg The msg instance to transform.
     * @return {!Object}
     * @suppress {unusedLocalVariables} f is only used for nested messages
     */
    proto.dasha.sdk.RejectJobMessage.toObject = function (includeInstance, msg) {
        var f, obj = {
            instanceId: jspb.Message.getFieldWithDefault(msg, 1, ""),
            jobId: jspb.Message.getFieldWithDefault(msg, 2, "")
        };
        if (includeInstance) {
            obj.$jspbMessageInstance = msg;
        }
        return obj;
    };
}
/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.dasha.sdk.RejectJobMessage}
 */
proto.dasha.sdk.RejectJobMessage.deserializeBinary = function (bytes) {
    var reader = new jspb.BinaryReader(bytes);
    var msg = new proto.dasha.sdk.RejectJobMessage;
    return proto.dasha.sdk.RejectJobMessage.deserializeBinaryFromReader(msg, reader);
};
/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.dasha.sdk.RejectJobMessage} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.dasha.sdk.RejectJobMessage}
 */
proto.dasha.sdk.RejectJobMessage.deserializeBinaryFromReader = function (msg, reader) {
    while (reader.nextField()) {
        if (reader.isEndGroup()) {
            break;
        }
        var field = reader.getFieldNumber();
        switch (field) {
            case 1:
                var value = /** @type {string} */ (reader.readString());
                msg.setInstanceId(value);
                break;
            case 2:
                var value = /** @type {string} */ (reader.readString());
                msg.setJobId(value);
                break;
            default:
                reader.skipField();
                break;
        }
    }
    return msg;
};
/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.dasha.sdk.RejectJobMessage.prototype.serializeBinary = function () {
    var writer = new jspb.BinaryWriter();
    proto.dasha.sdk.RejectJobMessage.serializeBinaryToWriter(this, writer);
    return writer.getResultBuffer();
};
/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.dasha.sdk.RejectJobMessage} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.dasha.sdk.RejectJobMessage.serializeBinaryToWriter = function (message, writer) {
    var f = undefined;
    f = message.getInstanceId();
    if (f.length > 0) {
        writer.writeString(1, f);
    }
    f = message.getJobId();
    if (f.length > 0) {
        writer.writeString(2, f);
    }
};
/**
 * optional string instance_id = 1;
 * @return {string}
 */
proto.dasha.sdk.RejectJobMessage.prototype.getInstanceId = function () {
    return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};
/**
 * @param {string} value
 * @return {!proto.dasha.sdk.RejectJobMessage} returns this
 */
proto.dasha.sdk.RejectJobMessage.prototype.setInstanceId = function (value) {
    return jspb.Message.setProto3StringField(this, 1, value);
};
/**
 * optional string job_id = 2;
 * @return {string}
 */
proto.dasha.sdk.RejectJobMessage.prototype.getJobId = function () {
    return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};
/**
 * @param {string} value
 * @return {!proto.dasha.sdk.RejectJobMessage} returns this
 */
proto.dasha.sdk.RejectJobMessage.prototype.setJobId = function (value) {
    return jspb.Message.setProto3StringField(this, 2, value);
};
if (jspb.Message.GENERATE_TO_OBJECT) {
    /**
     * Creates an object representation of this proto.
     * Field names that are reserved in JavaScript and will be renamed to pb_name.
     * Optional fields that are not set will be set to undefined.
     * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
     * For the list of reserved names please see:
     *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
     * @param {boolean=} opt_includeInstance Deprecated. whether to include the
     *     JSPB instance for transitional soy proto support:
     *     http://goto/soy-param-migration
     * @return {!Object}
     */
    proto.dasha.sdk.StreamInit.prototype.toObject = function (opt_includeInstance) {
        return proto.dasha.sdk.StreamInit.toObject(opt_includeInstance, this);
    };
    /**
     * Static version of the {@see toObject} method.
     * @param {boolean|undefined} includeInstance Deprecated. Whether to include
     *     the JSPB instance for transitional soy proto support:
     *     http://goto/soy-param-migration
     * @param {!proto.dasha.sdk.StreamInit} msg The msg instance to transform.
     * @return {!Object}
     * @suppress {unusedLocalVariables} f is only used for nested messages
     */
    proto.dasha.sdk.StreamInit.toObject = function (includeInstance, msg) {
        var f, obj = {
            instanceId: jspb.Message.getFieldWithDefault(msg, 1, "")
        };
        if (includeInstance) {
            obj.$jspbMessageInstance = msg;
        }
        return obj;
    };
}
/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.dasha.sdk.StreamInit}
 */
proto.dasha.sdk.StreamInit.deserializeBinary = function (bytes) {
    var reader = new jspb.BinaryReader(bytes);
    var msg = new proto.dasha.sdk.StreamInit;
    return proto.dasha.sdk.StreamInit.deserializeBinaryFromReader(msg, reader);
};
/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.dasha.sdk.StreamInit} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.dasha.sdk.StreamInit}
 */
proto.dasha.sdk.StreamInit.deserializeBinaryFromReader = function (msg, reader) {
    while (reader.nextField()) {
        if (reader.isEndGroup()) {
            break;
        }
        var field = reader.getFieldNumber();
        switch (field) {
            case 1:
                var value = /** @type {string} */ (reader.readString());
                msg.setInstanceId(value);
                break;
            default:
                reader.skipField();
                break;
        }
    }
    return msg;
};
/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.dasha.sdk.StreamInit.prototype.serializeBinary = function () {
    var writer = new jspb.BinaryWriter();
    proto.dasha.sdk.StreamInit.serializeBinaryToWriter(this, writer);
    return writer.getResultBuffer();
};
/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.dasha.sdk.StreamInit} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.dasha.sdk.StreamInit.serializeBinaryToWriter = function (message, writer) {
    var f = undefined;
    f = message.getInstanceId();
    if (f.length > 0) {
        writer.writeString(1, f);
    }
};
/**
 * optional string instance_id = 1;
 * @return {string}
 */
proto.dasha.sdk.StreamInit.prototype.getInstanceId = function () {
    return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};
/**
 * @param {string} value
 * @return {!proto.dasha.sdk.StreamInit} returns this
 */
proto.dasha.sdk.StreamInit.prototype.setInstanceId = function (value) {
    return jspb.Message.setProto3StringField(this, 1, value);
};
if (jspb.Message.GENERATE_TO_OBJECT) {
    /**
     * Creates an object representation of this proto.
     * Field names that are reserved in JavaScript and will be renamed to pb_name.
     * Optional fields that are not set will be set to undefined.
     * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
     * For the list of reserved names please see:
     *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
     * @param {boolean=} opt_includeInstance Deprecated. whether to include the
     *     JSPB instance for transitional soy proto support:
     *     http://goto/soy-param-migration
     * @return {!Object}
     */
    proto.dasha.sdk.Empty.prototype.toObject = function (opt_includeInstance) {
        return proto.dasha.sdk.Empty.toObject(opt_includeInstance, this);
    };
    /**
     * Static version of the {@see toObject} method.
     * @param {boolean|undefined} includeInstance Deprecated. Whether to include
     *     the JSPB instance for transitional soy proto support:
     *     http://goto/soy-param-migration
     * @param {!proto.dasha.sdk.Empty} msg The msg instance to transform.
     * @return {!Object}
     * @suppress {unusedLocalVariables} f is only used for nested messages
     */
    proto.dasha.sdk.Empty.toObject = function (includeInstance, msg) {
        var f, obj = {};
        if (includeInstance) {
            obj.$jspbMessageInstance = msg;
        }
        return obj;
    };
}
/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.dasha.sdk.Empty}
 */
proto.dasha.sdk.Empty.deserializeBinary = function (bytes) {
    var reader = new jspb.BinaryReader(bytes);
    var msg = new proto.dasha.sdk.Empty;
    return proto.dasha.sdk.Empty.deserializeBinaryFromReader(msg, reader);
};
/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.dasha.sdk.Empty} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.dasha.sdk.Empty}
 */
proto.dasha.sdk.Empty.deserializeBinaryFromReader = function (msg, reader) {
    while (reader.nextField()) {
        if (reader.isEndGroup()) {
            break;
        }
        var field = reader.getFieldNumber();
        switch (field) {
            default:
                reader.skipField();
                break;
        }
    }
    return msg;
};
/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.dasha.sdk.Empty.prototype.serializeBinary = function () {
    var writer = new jspb.BinaryWriter();
    proto.dasha.sdk.Empty.serializeBinaryToWriter(this, writer);
    return writer.getResultBuffer();
};
/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.dasha.sdk.Empty} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.dasha.sdk.Empty.serializeBinaryToWriter = function (message, writer) {
    var f = undefined;
};
if (jspb.Message.GENERATE_TO_OBJECT) {
    /**
     * Creates an object representation of this proto.
     * Field names that are reserved in JavaScript and will be renamed to pb_name.
     * Optional fields that are not set will be set to undefined.
     * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
     * For the list of reserved names please see:
     *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
     * @param {boolean=} opt_includeInstance Deprecated. whether to include the
     *     JSPB instance for transitional soy proto support:
     *     http://goto/soy-param-migration
     * @return {!Object}
     */
    proto.dasha.sdk.Parameter.prototype.toObject = function (opt_includeInstance) {
        return proto.dasha.sdk.Parameter.toObject(opt_includeInstance, this);
    };
    /**
     * Static version of the {@see toObject} method.
     * @param {boolean|undefined} includeInstance Deprecated. Whether to include
     *     the JSPB instance for transitional soy proto support:
     *     http://goto/soy-param-migration
     * @param {!proto.dasha.sdk.Parameter} msg The msg instance to transform.
     * @return {!Object}
     * @suppress {unusedLocalVariables} f is only used for nested messages
     */
    proto.dasha.sdk.Parameter.toObject = function (includeInstance, msg) {
        var f, obj = {
            name: jspb.Message.getFieldWithDefault(msg, 1, ""),
            value: jspb.Message.getFieldWithDefault(msg, 2, "")
        };
        if (includeInstance) {
            obj.$jspbMessageInstance = msg;
        }
        return obj;
    };
}
/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.dasha.sdk.Parameter}
 */
proto.dasha.sdk.Parameter.deserializeBinary = function (bytes) {
    var reader = new jspb.BinaryReader(bytes);
    var msg = new proto.dasha.sdk.Parameter;
    return proto.dasha.sdk.Parameter.deserializeBinaryFromReader(msg, reader);
};
/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.dasha.sdk.Parameter} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.dasha.sdk.Parameter}
 */
proto.dasha.sdk.Parameter.deserializeBinaryFromReader = function (msg, reader) {
    while (reader.nextField()) {
        if (reader.isEndGroup()) {
            break;
        }
        var field = reader.getFieldNumber();
        switch (field) {
            case 1:
                var value = /** @type {string} */ (reader.readString());
                msg.setName(value);
                break;
            case 2:
                var value = /** @type {string} */ (reader.readString());
                msg.setValue(value);
                break;
            default:
                reader.skipField();
                break;
        }
    }
    return msg;
};
/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.dasha.sdk.Parameter.prototype.serializeBinary = function () {
    var writer = new jspb.BinaryWriter();
    proto.dasha.sdk.Parameter.serializeBinaryToWriter(this, writer);
    return writer.getResultBuffer();
};
/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.dasha.sdk.Parameter} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.dasha.sdk.Parameter.serializeBinaryToWriter = function (message, writer) {
    var f = undefined;
    f = message.getName();
    if (f.length > 0) {
        writer.writeString(1, f);
    }
    f = message.getValue();
    if (f.length > 0) {
        writer.writeString(2, f);
    }
};
/**
 * optional string name = 1;
 * @return {string}
 */
proto.dasha.sdk.Parameter.prototype.getName = function () {
    return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};
/**
 * @param {string} value
 * @return {!proto.dasha.sdk.Parameter} returns this
 */
proto.dasha.sdk.Parameter.prototype.setName = function (value) {
    return jspb.Message.setProto3StringField(this, 1, value);
};
/**
 * optional string value = 2;
 * @return {string}
 */
proto.dasha.sdk.Parameter.prototype.getValue = function () {
    return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};
/**
 * @param {string} value
 * @return {!proto.dasha.sdk.Parameter} returns this
 */
proto.dasha.sdk.Parameter.prototype.setValue = function (value) {
    return jspb.Message.setProto3StringField(this, 2, value);
};
/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.dasha.sdk.StreamRequest.repeatedFields_ = [4];
if (jspb.Message.GENERATE_TO_OBJECT) {
    /**
     * Creates an object representation of this proto.
     * Field names that are reserved in JavaScript and will be renamed to pb_name.
     * Optional fields that are not set will be set to undefined.
     * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
     * For the list of reserved names please see:
     *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
     * @param {boolean=} opt_includeInstance Deprecated. whether to include the
     *     JSPB instance for transitional soy proto support:
     *     http://goto/soy-param-migration
     * @return {!Object}
     */
    proto.dasha.sdk.StreamRequest.prototype.toObject = function (opt_includeInstance) {
        return proto.dasha.sdk.StreamRequest.toObject(opt_includeInstance, this);
    };
    /**
     * Static version of the {@see toObject} method.
     * @param {boolean|undefined} includeInstance Deprecated. Whether to include
     *     the JSPB instance for transitional soy proto support:
     *     http://goto/soy-param-migration
     * @param {!proto.dasha.sdk.StreamRequest} msg The msg instance to transform.
     * @return {!Object}
     * @suppress {unusedLocalVariables} f is only used for nested messages
     */
    proto.dasha.sdk.StreamRequest.toObject = function (includeInstance, msg) {
        var f, obj = {
            jobId: jspb.Message.getFieldWithDefault(msg, 1, ""),
            requestId: jspb.Message.getFieldWithDefault(msg, 2, 0),
            method: jspb.Message.getFieldWithDefault(msg, 3, ""),
            parametersList: jspb.Message.toObjectList(msg.getParametersList(), proto.dasha.sdk.Parameter.toObject, includeInstance)
        };
        if (includeInstance) {
            obj.$jspbMessageInstance = msg;
        }
        return obj;
    };
}
/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.dasha.sdk.StreamRequest}
 */
proto.dasha.sdk.StreamRequest.deserializeBinary = function (bytes) {
    var reader = new jspb.BinaryReader(bytes);
    var msg = new proto.dasha.sdk.StreamRequest;
    return proto.dasha.sdk.StreamRequest.deserializeBinaryFromReader(msg, reader);
};
/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.dasha.sdk.StreamRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.dasha.sdk.StreamRequest}
 */
proto.dasha.sdk.StreamRequest.deserializeBinaryFromReader = function (msg, reader) {
    while (reader.nextField()) {
        if (reader.isEndGroup()) {
            break;
        }
        var field = reader.getFieldNumber();
        switch (field) {
            case 1:
                var value = /** @type {string} */ (reader.readString());
                msg.setJobId(value);
                break;
            case 2:
                var value = /** @type {number} */ (reader.readInt64());
                msg.setRequestId(value);
                break;
            case 3:
                var value = /** @type {string} */ (reader.readString());
                msg.setMethod(value);
                break;
            case 4:
                var value = new proto.dasha.sdk.Parameter;
                reader.readMessage(value, proto.dasha.sdk.Parameter.deserializeBinaryFromReader);
                msg.addParameters(value);
                break;
            default:
                reader.skipField();
                break;
        }
    }
    return msg;
};
/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.dasha.sdk.StreamRequest.prototype.serializeBinary = function () {
    var writer = new jspb.BinaryWriter();
    proto.dasha.sdk.StreamRequest.serializeBinaryToWriter(this, writer);
    return writer.getResultBuffer();
};
/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.dasha.sdk.StreamRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.dasha.sdk.StreamRequest.serializeBinaryToWriter = function (message, writer) {
    var f = undefined;
    f = message.getJobId();
    if (f.length > 0) {
        writer.writeString(1, f);
    }
    f = message.getRequestId();
    if (f !== 0) {
        writer.writeInt64(2, f);
    }
    f = message.getMethod();
    if (f.length > 0) {
        writer.writeString(3, f);
    }
    f = message.getParametersList();
    if (f.length > 0) {
        writer.writeRepeatedMessage(4, f, proto.dasha.sdk.Parameter.serializeBinaryToWriter);
    }
};
/**
 * optional string job_id = 1;
 * @return {string}
 */
proto.dasha.sdk.StreamRequest.prototype.getJobId = function () {
    return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};
/**
 * @param {string} value
 * @return {!proto.dasha.sdk.StreamRequest} returns this
 */
proto.dasha.sdk.StreamRequest.prototype.setJobId = function (value) {
    return jspb.Message.setProto3StringField(this, 1, value);
};
/**
 * optional int64 request_id = 2;
 * @return {number}
 */
proto.dasha.sdk.StreamRequest.prototype.getRequestId = function () {
    return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 2, 0));
};
/**
 * @param {number} value
 * @return {!proto.dasha.sdk.StreamRequest} returns this
 */
proto.dasha.sdk.StreamRequest.prototype.setRequestId = function (value) {
    return jspb.Message.setProto3IntField(this, 2, value);
};
/**
 * optional string method = 3;
 * @return {string}
 */
proto.dasha.sdk.StreamRequest.prototype.getMethod = function () {
    return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 3, ""));
};
/**
 * @param {string} value
 * @return {!proto.dasha.sdk.StreamRequest} returns this
 */
proto.dasha.sdk.StreamRequest.prototype.setMethod = function (value) {
    return jspb.Message.setProto3StringField(this, 3, value);
};
/**
 * repeated Parameter parameters = 4;
 * @return {!Array<!proto.dasha.sdk.Parameter>}
 */
proto.dasha.sdk.StreamRequest.prototype.getParametersList = function () {
    return /** @type{!Array<!proto.dasha.sdk.Parameter>} */ (jspb.Message.getRepeatedWrapperField(this, proto.dasha.sdk.Parameter, 4));
};
/**
 * @param {!Array<!proto.dasha.sdk.Parameter>} value
 * @return {!proto.dasha.sdk.StreamRequest} returns this
*/
proto.dasha.sdk.StreamRequest.prototype.setParametersList = function (value) {
    return jspb.Message.setRepeatedWrapperField(this, 4, value);
};
/**
 * @param {!proto.dasha.sdk.Parameter=} opt_value
 * @param {number=} opt_index
 * @return {!proto.dasha.sdk.Parameter}
 */
proto.dasha.sdk.StreamRequest.prototype.addParameters = function (opt_value, opt_index) {
    return jspb.Message.addToRepeatedWrapperField(this, 4, opt_value, proto.dasha.sdk.Parameter, opt_index);
};
/**
 * Clears the list making it empty but non-null.
 * @return {!proto.dasha.sdk.StreamRequest} returns this
 */
proto.dasha.sdk.StreamRequest.prototype.clearParametersList = function () {
    return this.setParametersList([]);
};
/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.dasha.sdk.StreamNotification.repeatedFields_ = [4];
if (jspb.Message.GENERATE_TO_OBJECT) {
    /**
     * Creates an object representation of this proto.
     * Field names that are reserved in JavaScript and will be renamed to pb_name.
     * Optional fields that are not set will be set to undefined.
     * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
     * For the list of reserved names please see:
     *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
     * @param {boolean=} opt_includeInstance Deprecated. whether to include the
     *     JSPB instance for transitional soy proto support:
     *     http://goto/soy-param-migration
     * @return {!Object}
     */
    proto.dasha.sdk.StreamNotification.prototype.toObject = function (opt_includeInstance) {
        return proto.dasha.sdk.StreamNotification.toObject(opt_includeInstance, this);
    };
    /**
     * Static version of the {@see toObject} method.
     * @param {boolean|undefined} includeInstance Deprecated. Whether to include
     *     the JSPB instance for transitional soy proto support:
     *     http://goto/soy-param-migration
     * @param {!proto.dasha.sdk.StreamNotification} msg The msg instance to transform.
     * @return {!Object}
     * @suppress {unusedLocalVariables} f is only used for nested messages
     */
    proto.dasha.sdk.StreamNotification.toObject = function (includeInstance, msg) {
        var f, obj = {
            jobId: jspb.Message.getFieldWithDefault(msg, 1, ""),
            notificationId: jspb.Message.getFieldWithDefault(msg, 2, 0),
            method: jspb.Message.getFieldWithDefault(msg, 3, ""),
            parametersList: jspb.Message.toObjectList(msg.getParametersList(), proto.dasha.sdk.Parameter.toObject, includeInstance)
        };
        if (includeInstance) {
            obj.$jspbMessageInstance = msg;
        }
        return obj;
    };
}
/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.dasha.sdk.StreamNotification}
 */
proto.dasha.sdk.StreamNotification.deserializeBinary = function (bytes) {
    var reader = new jspb.BinaryReader(bytes);
    var msg = new proto.dasha.sdk.StreamNotification;
    return proto.dasha.sdk.StreamNotification.deserializeBinaryFromReader(msg, reader);
};
/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.dasha.sdk.StreamNotification} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.dasha.sdk.StreamNotification}
 */
proto.dasha.sdk.StreamNotification.deserializeBinaryFromReader = function (msg, reader) {
    while (reader.nextField()) {
        if (reader.isEndGroup()) {
            break;
        }
        var field = reader.getFieldNumber();
        switch (field) {
            case 1:
                var value = /** @type {string} */ (reader.readString());
                msg.setJobId(value);
                break;
            case 2:
                var value = /** @type {number} */ (reader.readInt64());
                msg.setNotificationId(value);
                break;
            case 3:
                var value = /** @type {string} */ (reader.readString());
                msg.setMethod(value);
                break;
            case 4:
                var value = new proto.dasha.sdk.Parameter;
                reader.readMessage(value, proto.dasha.sdk.Parameter.deserializeBinaryFromReader);
                msg.addParameters(value);
                break;
            default:
                reader.skipField();
                break;
        }
    }
    return msg;
};
/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.dasha.sdk.StreamNotification.prototype.serializeBinary = function () {
    var writer = new jspb.BinaryWriter();
    proto.dasha.sdk.StreamNotification.serializeBinaryToWriter(this, writer);
    return writer.getResultBuffer();
};
/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.dasha.sdk.StreamNotification} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.dasha.sdk.StreamNotification.serializeBinaryToWriter = function (message, writer) {
    var f = undefined;
    f = message.getJobId();
    if (f.length > 0) {
        writer.writeString(1, f);
    }
    f = message.getNotificationId();
    if (f !== 0) {
        writer.writeInt64(2, f);
    }
    f = message.getMethod();
    if (f.length > 0) {
        writer.writeString(3, f);
    }
    f = message.getParametersList();
    if (f.length > 0) {
        writer.writeRepeatedMessage(4, f, proto.dasha.sdk.Parameter.serializeBinaryToWriter);
    }
};
/**
 * optional string job_id = 1;
 * @return {string}
 */
proto.dasha.sdk.StreamNotification.prototype.getJobId = function () {
    return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};
/**
 * @param {string} value
 * @return {!proto.dasha.sdk.StreamNotification} returns this
 */
proto.dasha.sdk.StreamNotification.prototype.setJobId = function (value) {
    return jspb.Message.setProto3StringField(this, 1, value);
};
/**
 * optional int64 notification_id = 2;
 * @return {number}
 */
proto.dasha.sdk.StreamNotification.prototype.getNotificationId = function () {
    return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 2, 0));
};
/**
 * @param {number} value
 * @return {!proto.dasha.sdk.StreamNotification} returns this
 */
proto.dasha.sdk.StreamNotification.prototype.setNotificationId = function (value) {
    return jspb.Message.setProto3IntField(this, 2, value);
};
/**
 * optional string method = 3;
 * @return {string}
 */
proto.dasha.sdk.StreamNotification.prototype.getMethod = function () {
    return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 3, ""));
};
/**
 * @param {string} value
 * @return {!proto.dasha.sdk.StreamNotification} returns this
 */
proto.dasha.sdk.StreamNotification.prototype.setMethod = function (value) {
    return jspb.Message.setProto3StringField(this, 3, value);
};
/**
 * repeated Parameter parameters = 4;
 * @return {!Array<!proto.dasha.sdk.Parameter>}
 */
proto.dasha.sdk.StreamNotification.prototype.getParametersList = function () {
    return /** @type{!Array<!proto.dasha.sdk.Parameter>} */ (jspb.Message.getRepeatedWrapperField(this, proto.dasha.sdk.Parameter, 4));
};
/**
 * @param {!Array<!proto.dasha.sdk.Parameter>} value
 * @return {!proto.dasha.sdk.StreamNotification} returns this
*/
proto.dasha.sdk.StreamNotification.prototype.setParametersList = function (value) {
    return jspb.Message.setRepeatedWrapperField(this, 4, value);
};
/**
 * @param {!proto.dasha.sdk.Parameter=} opt_value
 * @param {number=} opt_index
 * @return {!proto.dasha.sdk.Parameter}
 */
proto.dasha.sdk.StreamNotification.prototype.addParameters = function (opt_value, opt_index) {
    return jspb.Message.addToRepeatedWrapperField(this, 4, opt_value, proto.dasha.sdk.Parameter, opt_index);
};
/**
 * Clears the list making it empty but non-null.
 * @return {!proto.dasha.sdk.StreamNotification} returns this
 */
proto.dasha.sdk.StreamNotification.prototype.clearParametersList = function () {
    return this.setParametersList([]);
};
if (jspb.Message.GENERATE_TO_OBJECT) {
    /**
     * Creates an object representation of this proto.
     * Field names that are reserved in JavaScript and will be renamed to pb_name.
     * Optional fields that are not set will be set to undefined.
     * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
     * For the list of reserved names please see:
     *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
     * @param {boolean=} opt_includeInstance Deprecated. whether to include the
     *     JSPB instance for transitional soy proto support:
     *     http://goto/soy-param-migration
     * @return {!Object}
     */
    proto.dasha.sdk.StreamResponse.prototype.toObject = function (opt_includeInstance) {
        return proto.dasha.sdk.StreamResponse.toObject(opt_includeInstance, this);
    };
    /**
     * Static version of the {@see toObject} method.
     * @param {boolean|undefined} includeInstance Deprecated. Whether to include
     *     the JSPB instance for transitional soy proto support:
     *     http://goto/soy-param-migration
     * @param {!proto.dasha.sdk.StreamResponse} msg The msg instance to transform.
     * @return {!Object}
     * @suppress {unusedLocalVariables} f is only used for nested messages
     */
    proto.dasha.sdk.StreamResponse.toObject = function (includeInstance, msg) {
        var f, obj = {
            jobId: jspb.Message.getFieldWithDefault(msg, 1, ""),
            requestId: jspb.Message.getFieldWithDefault(msg, 2, 0),
            result: jspb.Message.getFieldWithDefault(msg, 3, "")
        };
        if (includeInstance) {
            obj.$jspbMessageInstance = msg;
        }
        return obj;
    };
}
/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.dasha.sdk.StreamResponse}
 */
proto.dasha.sdk.StreamResponse.deserializeBinary = function (bytes) {
    var reader = new jspb.BinaryReader(bytes);
    var msg = new proto.dasha.sdk.StreamResponse;
    return proto.dasha.sdk.StreamResponse.deserializeBinaryFromReader(msg, reader);
};
/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.dasha.sdk.StreamResponse} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.dasha.sdk.StreamResponse}
 */
proto.dasha.sdk.StreamResponse.deserializeBinaryFromReader = function (msg, reader) {
    while (reader.nextField()) {
        if (reader.isEndGroup()) {
            break;
        }
        var field = reader.getFieldNumber();
        switch (field) {
            case 1:
                var value = /** @type {string} */ (reader.readString());
                msg.setJobId(value);
                break;
            case 2:
                var value = /** @type {number} */ (reader.readInt64());
                msg.setRequestId(value);
                break;
            case 3:
                var value = /** @type {string} */ (reader.readString());
                msg.setResult(value);
                break;
            default:
                reader.skipField();
                break;
        }
    }
    return msg;
};
/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.dasha.sdk.StreamResponse.prototype.serializeBinary = function () {
    var writer = new jspb.BinaryWriter();
    proto.dasha.sdk.StreamResponse.serializeBinaryToWriter(this, writer);
    return writer.getResultBuffer();
};
/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.dasha.sdk.StreamResponse} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.dasha.sdk.StreamResponse.serializeBinaryToWriter = function (message, writer) {
    var f = undefined;
    f = message.getJobId();
    if (f.length > 0) {
        writer.writeString(1, f);
    }
    f = message.getRequestId();
    if (f !== 0) {
        writer.writeInt64(2, f);
    }
    f = message.getResult();
    if (f.length > 0) {
        writer.writeString(3, f);
    }
};
/**
 * optional string job_id = 1;
 * @return {string}
 */
proto.dasha.sdk.StreamResponse.prototype.getJobId = function () {
    return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};
/**
 * @param {string} value
 * @return {!proto.dasha.sdk.StreamResponse} returns this
 */
proto.dasha.sdk.StreamResponse.prototype.setJobId = function (value) {
    return jspb.Message.setProto3StringField(this, 1, value);
};
/**
 * optional int64 request_id = 2;
 * @return {number}
 */
proto.dasha.sdk.StreamResponse.prototype.getRequestId = function () {
    return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 2, 0));
};
/**
 * @param {number} value
 * @return {!proto.dasha.sdk.StreamResponse} returns this
 */
proto.dasha.sdk.StreamResponse.prototype.setRequestId = function (value) {
    return jspb.Message.setProto3IntField(this, 2, value);
};
/**
 * optional string result = 3;
 * @return {string}
 */
proto.dasha.sdk.StreamResponse.prototype.getResult = function () {
    return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 3, ""));
};
/**
 * @param {string} value
 * @return {!proto.dasha.sdk.StreamResponse} returns this
 */
proto.dasha.sdk.StreamResponse.prototype.setResult = function (value) {
    return jspb.Message.setProto3StringField(this, 3, value);
};
if (jspb.Message.GENERATE_TO_OBJECT) {
    /**
     * Creates an object representation of this proto.
     * Field names that are reserved in JavaScript and will be renamed to pb_name.
     * Optional fields that are not set will be set to undefined.
     * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
     * For the list of reserved names please see:
     *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
     * @param {boolean=} opt_includeInstance Deprecated. whether to include the
     *     JSPB instance for transitional soy proto support:
     *     http://goto/soy-param-migration
     * @return {!Object}
     */
    proto.dasha.sdk.StreamError.prototype.toObject = function (opt_includeInstance) {
        return proto.dasha.sdk.StreamError.toObject(opt_includeInstance, this);
    };
    /**
     * Static version of the {@see toObject} method.
     * @param {boolean|undefined} includeInstance Deprecated. Whether to include
     *     the JSPB instance for transitional soy proto support:
     *     http://goto/soy-param-migration
     * @param {!proto.dasha.sdk.StreamError} msg The msg instance to transform.
     * @return {!Object}
     * @suppress {unusedLocalVariables} f is only used for nested messages
     */
    proto.dasha.sdk.StreamError.toObject = function (includeInstance, msg) {
        var f, obj = {
            jobId: jspb.Message.getFieldWithDefault(msg, 1, ""),
            requestId: jspb.Message.getFieldWithDefault(msg, 2, 0),
            message: jspb.Message.getFieldWithDefault(msg, 3, "")
        };
        if (includeInstance) {
            obj.$jspbMessageInstance = msg;
        }
        return obj;
    };
}
/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.dasha.sdk.StreamError}
 */
proto.dasha.sdk.StreamError.deserializeBinary = function (bytes) {
    var reader = new jspb.BinaryReader(bytes);
    var msg = new proto.dasha.sdk.StreamError;
    return proto.dasha.sdk.StreamError.deserializeBinaryFromReader(msg, reader);
};
/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.dasha.sdk.StreamError} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.dasha.sdk.StreamError}
 */
proto.dasha.sdk.StreamError.deserializeBinaryFromReader = function (msg, reader) {
    while (reader.nextField()) {
        if (reader.isEndGroup()) {
            break;
        }
        var field = reader.getFieldNumber();
        switch (field) {
            case 1:
                var value = /** @type {string} */ (reader.readString());
                msg.setJobId(value);
                break;
            case 2:
                var value = /** @type {number} */ (reader.readInt64());
                msg.setRequestId(value);
                break;
            case 3:
                var value = /** @type {string} */ (reader.readString());
                msg.setMessage(value);
                break;
            default:
                reader.skipField();
                break;
        }
    }
    return msg;
};
/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.dasha.sdk.StreamError.prototype.serializeBinary = function () {
    var writer = new jspb.BinaryWriter();
    proto.dasha.sdk.StreamError.serializeBinaryToWriter(this, writer);
    return writer.getResultBuffer();
};
/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.dasha.sdk.StreamError} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.dasha.sdk.StreamError.serializeBinaryToWriter = function (message, writer) {
    var f = undefined;
    f = message.getJobId();
    if (f.length > 0) {
        writer.writeString(1, f);
    }
    f = message.getRequestId();
    if (f !== 0) {
        writer.writeInt64(2, f);
    }
    f = message.getMessage();
    if (f.length > 0) {
        writer.writeString(3, f);
    }
};
/**
 * optional string job_id = 1;
 * @return {string}
 */
proto.dasha.sdk.StreamError.prototype.getJobId = function () {
    return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};
/**
 * @param {string} value
 * @return {!proto.dasha.sdk.StreamError} returns this
 */
proto.dasha.sdk.StreamError.prototype.setJobId = function (value) {
    return jspb.Message.setProto3StringField(this, 1, value);
};
/**
 * optional int64 request_id = 2;
 * @return {number}
 */
proto.dasha.sdk.StreamError.prototype.getRequestId = function () {
    return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 2, 0));
};
/**
 * @param {number} value
 * @return {!proto.dasha.sdk.StreamError} returns this
 */
proto.dasha.sdk.StreamError.prototype.setRequestId = function (value) {
    return jspb.Message.setProto3IntField(this, 2, value);
};
/**
 * optional string message = 3;
 * @return {string}
 */
proto.dasha.sdk.StreamError.prototype.getMessage = function () {
    return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 3, ""));
};
/**
 * @param {string} value
 * @return {!proto.dasha.sdk.StreamError} returns this
 */
proto.dasha.sdk.StreamError.prototype.setMessage = function (value) {
    return jspb.Message.setProto3StringField(this, 3, value);
};
if (jspb.Message.GENERATE_TO_OBJECT) {
    /**
     * Creates an object representation of this proto.
     * Field names that are reserved in JavaScript and will be renamed to pb_name.
     * Optional fields that are not set will be set to undefined.
     * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
     * For the list of reserved names please see:
     *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
     * @param {boolean=} opt_includeInstance Deprecated. whether to include the
     *     JSPB instance for transitional soy proto support:
     *     http://goto/soy-param-migration
     * @return {!Object}
     */
    proto.dasha.sdk.ClientStreamMessage.prototype.toObject = function (opt_includeInstance) {
        return proto.dasha.sdk.ClientStreamMessage.toObject(opt_includeInstance, this);
    };
    /**
     * Static version of the {@see toObject} method.
     * @param {boolean|undefined} includeInstance Deprecated. Whether to include
     *     the JSPB instance for transitional soy proto support:
     *     http://goto/soy-param-migration
     * @param {!proto.dasha.sdk.ClientStreamMessage} msg The msg instance to transform.
     * @return {!Object}
     * @suppress {unusedLocalVariables} f is only used for nested messages
     */
    proto.dasha.sdk.ClientStreamMessage.toObject = function (includeInstance, msg) {
        var f, obj = {
            instanceId: jspb.Message.getFieldWithDefault(msg, 1, ""),
            message: (f = msg.getMessage()) && proto.dasha.sdk.StreamMessage.toObject(includeInstance, f)
        };
        if (includeInstance) {
            obj.$jspbMessageInstance = msg;
        }
        return obj;
    };
}
/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.dasha.sdk.ClientStreamMessage}
 */
proto.dasha.sdk.ClientStreamMessage.deserializeBinary = function (bytes) {
    var reader = new jspb.BinaryReader(bytes);
    var msg = new proto.dasha.sdk.ClientStreamMessage;
    return proto.dasha.sdk.ClientStreamMessage.deserializeBinaryFromReader(msg, reader);
};
/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.dasha.sdk.ClientStreamMessage} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.dasha.sdk.ClientStreamMessage}
 */
proto.dasha.sdk.ClientStreamMessage.deserializeBinaryFromReader = function (msg, reader) {
    while (reader.nextField()) {
        if (reader.isEndGroup()) {
            break;
        }
        var field = reader.getFieldNumber();
        switch (field) {
            case 1:
                var value = /** @type {string} */ (reader.readString());
                msg.setInstanceId(value);
                break;
            case 2:
                var value = new proto.dasha.sdk.StreamMessage;
                reader.readMessage(value, proto.dasha.sdk.StreamMessage.deserializeBinaryFromReader);
                msg.setMessage(value);
                break;
            default:
                reader.skipField();
                break;
        }
    }
    return msg;
};
/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.dasha.sdk.ClientStreamMessage.prototype.serializeBinary = function () {
    var writer = new jspb.BinaryWriter();
    proto.dasha.sdk.ClientStreamMessage.serializeBinaryToWriter(this, writer);
    return writer.getResultBuffer();
};
/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.dasha.sdk.ClientStreamMessage} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.dasha.sdk.ClientStreamMessage.serializeBinaryToWriter = function (message, writer) {
    var f = undefined;
    f = message.getInstanceId();
    if (f.length > 0) {
        writer.writeString(1, f);
    }
    f = message.getMessage();
    if (f != null) {
        writer.writeMessage(2, f, proto.dasha.sdk.StreamMessage.serializeBinaryToWriter);
    }
};
/**
 * optional string instance_id = 1;
 * @return {string}
 */
proto.dasha.sdk.ClientStreamMessage.prototype.getInstanceId = function () {
    return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};
/**
 * @param {string} value
 * @return {!proto.dasha.sdk.ClientStreamMessage} returns this
 */
proto.dasha.sdk.ClientStreamMessage.prototype.setInstanceId = function (value) {
    return jspb.Message.setProto3StringField(this, 1, value);
};
/**
 * optional StreamMessage message = 2;
 * @return {?proto.dasha.sdk.StreamMessage}
 */
proto.dasha.sdk.ClientStreamMessage.prototype.getMessage = function () {
    return /** @type{?proto.dasha.sdk.StreamMessage} */ (jspb.Message.getWrapperField(this, proto.dasha.sdk.StreamMessage, 2));
};
/**
 * @param {?proto.dasha.sdk.StreamMessage|undefined} value
 * @return {!proto.dasha.sdk.ClientStreamMessage} returns this
*/
proto.dasha.sdk.ClientStreamMessage.prototype.setMessage = function (value) {
    return jspb.Message.setWrapperField(this, 2, value);
};
/**
 * Clears the message field making it undefined.
 * @return {!proto.dasha.sdk.ClientStreamMessage} returns this
 */
proto.dasha.sdk.ClientStreamMessage.prototype.clearMessage = function () {
    return this.setMessage(undefined);
};
/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.dasha.sdk.ClientStreamMessage.prototype.hasMessage = function () {
    return jspb.Message.getField(this, 2) != null;
};
/**
 * Oneof group definitions for this message. Each group defines the field
 * numbers belonging to that group. When of these fields' value is set, all
 * other fields in the group are cleared. During deserialization, if multiple
 * fields are encountered for a group, only the last value seen will be kept.
 * @private {!Array<!Array<number>>}
 * @const
 */
proto.dasha.sdk.StreamMessage.oneofGroups_ = [[1, 2, 3, 4]];
/**
 * @enum {number}
 */
proto.dasha.sdk.StreamMessage.MessageTypeCase = {
    MESSAGE_TYPE_NOT_SET: 0,
    REQUEST: 1,
    RESPONSE: 2,
    NOTIFICATION: 3,
    ERROR: 4
};
/**
 * @return {proto.dasha.sdk.StreamMessage.MessageTypeCase}
 */
proto.dasha.sdk.StreamMessage.prototype.getMessageTypeCase = function () {
    return /** @type {proto.dasha.sdk.StreamMessage.MessageTypeCase} */ (jspb.Message.computeOneofCase(this, proto.dasha.sdk.StreamMessage.oneofGroups_[0]));
};
if (jspb.Message.GENERATE_TO_OBJECT) {
    /**
     * Creates an object representation of this proto.
     * Field names that are reserved in JavaScript and will be renamed to pb_name.
     * Optional fields that are not set will be set to undefined.
     * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
     * For the list of reserved names please see:
     *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
     * @param {boolean=} opt_includeInstance Deprecated. whether to include the
     *     JSPB instance for transitional soy proto support:
     *     http://goto/soy-param-migration
     * @return {!Object}
     */
    proto.dasha.sdk.StreamMessage.prototype.toObject = function (opt_includeInstance) {
        return proto.dasha.sdk.StreamMessage.toObject(opt_includeInstance, this);
    };
    /**
     * Static version of the {@see toObject} method.
     * @param {boolean|undefined} includeInstance Deprecated. Whether to include
     *     the JSPB instance for transitional soy proto support:
     *     http://goto/soy-param-migration
     * @param {!proto.dasha.sdk.StreamMessage} msg The msg instance to transform.
     * @return {!Object}
     * @suppress {unusedLocalVariables} f is only used for nested messages
     */
    proto.dasha.sdk.StreamMessage.toObject = function (includeInstance, msg) {
        var f, obj = {
            request: (f = msg.getRequest()) && proto.dasha.sdk.StreamRequest.toObject(includeInstance, f),
            response: (f = msg.getResponse()) && proto.dasha.sdk.StreamResponse.toObject(includeInstance, f),
            notification: (f = msg.getNotification()) && proto.dasha.sdk.StreamNotification.toObject(includeInstance, f),
            error: (f = msg.getError()) && proto.dasha.sdk.StreamError.toObject(includeInstance, f)
        };
        if (includeInstance) {
            obj.$jspbMessageInstance = msg;
        }
        return obj;
    };
}
/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.dasha.sdk.StreamMessage}
 */
proto.dasha.sdk.StreamMessage.deserializeBinary = function (bytes) {
    var reader = new jspb.BinaryReader(bytes);
    var msg = new proto.dasha.sdk.StreamMessage;
    return proto.dasha.sdk.StreamMessage.deserializeBinaryFromReader(msg, reader);
};
/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.dasha.sdk.StreamMessage} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.dasha.sdk.StreamMessage}
 */
proto.dasha.sdk.StreamMessage.deserializeBinaryFromReader = function (msg, reader) {
    while (reader.nextField()) {
        if (reader.isEndGroup()) {
            break;
        }
        var field = reader.getFieldNumber();
        switch (field) {
            case 1:
                var value = new proto.dasha.sdk.StreamRequest;
                reader.readMessage(value, proto.dasha.sdk.StreamRequest.deserializeBinaryFromReader);
                msg.setRequest(value);
                break;
            case 2:
                var value = new proto.dasha.sdk.StreamResponse;
                reader.readMessage(value, proto.dasha.sdk.StreamResponse.deserializeBinaryFromReader);
                msg.setResponse(value);
                break;
            case 3:
                var value = new proto.dasha.sdk.StreamNotification;
                reader.readMessage(value, proto.dasha.sdk.StreamNotification.deserializeBinaryFromReader);
                msg.setNotification(value);
                break;
            case 4:
                var value = new proto.dasha.sdk.StreamError;
                reader.readMessage(value, proto.dasha.sdk.StreamError.deserializeBinaryFromReader);
                msg.setError(value);
                break;
            default:
                reader.skipField();
                break;
        }
    }
    return msg;
};
/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.dasha.sdk.StreamMessage.prototype.serializeBinary = function () {
    var writer = new jspb.BinaryWriter();
    proto.dasha.sdk.StreamMessage.serializeBinaryToWriter(this, writer);
    return writer.getResultBuffer();
};
/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.dasha.sdk.StreamMessage} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.dasha.sdk.StreamMessage.serializeBinaryToWriter = function (message, writer) {
    var f = undefined;
    f = message.getRequest();
    if (f != null) {
        writer.writeMessage(1, f, proto.dasha.sdk.StreamRequest.serializeBinaryToWriter);
    }
    f = message.getResponse();
    if (f != null) {
        writer.writeMessage(2, f, proto.dasha.sdk.StreamResponse.serializeBinaryToWriter);
    }
    f = message.getNotification();
    if (f != null) {
        writer.writeMessage(3, f, proto.dasha.sdk.StreamNotification.serializeBinaryToWriter);
    }
    f = message.getError();
    if (f != null) {
        writer.writeMessage(4, f, proto.dasha.sdk.StreamError.serializeBinaryToWriter);
    }
};
/**
 * optional StreamRequest request = 1;
 * @return {?proto.dasha.sdk.StreamRequest}
 */
proto.dasha.sdk.StreamMessage.prototype.getRequest = function () {
    return /** @type{?proto.dasha.sdk.StreamRequest} */ (jspb.Message.getWrapperField(this, proto.dasha.sdk.StreamRequest, 1));
};
/**
 * @param {?proto.dasha.sdk.StreamRequest|undefined} value
 * @return {!proto.dasha.sdk.StreamMessage} returns this
*/
proto.dasha.sdk.StreamMessage.prototype.setRequest = function (value) {
    return jspb.Message.setOneofWrapperField(this, 1, proto.dasha.sdk.StreamMessage.oneofGroups_[0], value);
};
/**
 * Clears the message field making it undefined.
 * @return {!proto.dasha.sdk.StreamMessage} returns this
 */
proto.dasha.sdk.StreamMessage.prototype.clearRequest = function () {
    return this.setRequest(undefined);
};
/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.dasha.sdk.StreamMessage.prototype.hasRequest = function () {
    return jspb.Message.getField(this, 1) != null;
};
/**
 * optional StreamResponse response = 2;
 * @return {?proto.dasha.sdk.StreamResponse}
 */
proto.dasha.sdk.StreamMessage.prototype.getResponse = function () {
    return /** @type{?proto.dasha.sdk.StreamResponse} */ (jspb.Message.getWrapperField(this, proto.dasha.sdk.StreamResponse, 2));
};
/**
 * @param {?proto.dasha.sdk.StreamResponse|undefined} value
 * @return {!proto.dasha.sdk.StreamMessage} returns this
*/
proto.dasha.sdk.StreamMessage.prototype.setResponse = function (value) {
    return jspb.Message.setOneofWrapperField(this, 2, proto.dasha.sdk.StreamMessage.oneofGroups_[0], value);
};
/**
 * Clears the message field making it undefined.
 * @return {!proto.dasha.sdk.StreamMessage} returns this
 */
proto.dasha.sdk.StreamMessage.prototype.clearResponse = function () {
    return this.setResponse(undefined);
};
/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.dasha.sdk.StreamMessage.prototype.hasResponse = function () {
    return jspb.Message.getField(this, 2) != null;
};
/**
 * optional StreamNotification notification = 3;
 * @return {?proto.dasha.sdk.StreamNotification}
 */
proto.dasha.sdk.StreamMessage.prototype.getNotification = function () {
    return /** @type{?proto.dasha.sdk.StreamNotification} */ (jspb.Message.getWrapperField(this, proto.dasha.sdk.StreamNotification, 3));
};
/**
 * @param {?proto.dasha.sdk.StreamNotification|undefined} value
 * @return {!proto.dasha.sdk.StreamMessage} returns this
*/
proto.dasha.sdk.StreamMessage.prototype.setNotification = function (value) {
    return jspb.Message.setOneofWrapperField(this, 3, proto.dasha.sdk.StreamMessage.oneofGroups_[0], value);
};
/**
 * Clears the message field making it undefined.
 * @return {!proto.dasha.sdk.StreamMessage} returns this
 */
proto.dasha.sdk.StreamMessage.prototype.clearNotification = function () {
    return this.setNotification(undefined);
};
/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.dasha.sdk.StreamMessage.prototype.hasNotification = function () {
    return jspb.Message.getField(this, 3) != null;
};
/**
 * optional StreamError error = 4;
 * @return {?proto.dasha.sdk.StreamError}
 */
proto.dasha.sdk.StreamMessage.prototype.getError = function () {
    return /** @type{?proto.dasha.sdk.StreamError} */ (jspb.Message.getWrapperField(this, proto.dasha.sdk.StreamError, 4));
};
/**
 * @param {?proto.dasha.sdk.StreamError|undefined} value
 * @return {!proto.dasha.sdk.StreamMessage} returns this
*/
proto.dasha.sdk.StreamMessage.prototype.setError = function (value) {
    return jspb.Message.setOneofWrapperField(this, 4, proto.dasha.sdk.StreamMessage.oneofGroups_[0], value);
};
/**
 * Clears the message field making it undefined.
 * @return {!proto.dasha.sdk.StreamMessage} returns this
 */
proto.dasha.sdk.StreamMessage.prototype.clearError = function () {
    return this.setError(undefined);
};
/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.dasha.sdk.StreamMessage.prototype.hasError = function () {
    return jspb.Message.getField(this, 4) != null;
};
goog.object.extend(exports, proto.dasha.sdk);
//# sourceMappingURL=sdk_pb.js.map