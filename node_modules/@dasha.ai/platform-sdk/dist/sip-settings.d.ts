export declare class SipSettingsManager {
    private readonly _client;
    constructor(options: {
        server: string;
        apiKey: string;
        insecure?: boolean;
    });
    private _getSipEndpoints;
    private _postSipEndpoint;
    private _patchSipEndpoint;
    private _deleteSipEndpoint;
    private _getSipOutbound;
    private _postSipOutbound;
    private _patchSipOutbound;
    private _deleteSipOutbound;
    createInbound(name: string, config: {
        applicationName: string;
        password?: string;
        ipAcls?: string[];
        priority?: number;
        groupId?: string;
    }): Promise<{
        id: string;
        uri: string;
    }>;
    listInbound(): Promise<Array<{
        id: string;
        name: string;
        ipAcls?: string[];
        applicationName: string;
        customerId: string;
        priority: number;
        groupId: string;
        uri: string;
    }>>;
    updateInbound(name: string, configPatch: {
        applicationName?: string;
        password?: string;
        ipAcls?: string[];
        priority?: number;
        groupId?: string;
    }): Promise<void>;
    deleteInbound(name: string): Promise<void>;
    createOutbound(name: string, config: {
        server: string;
        domain?: string;
        transport: string;
        account: string;
        password?: string;
    }): Promise<{
        id: string;
    }>;
    listOutbound(): Promise<Array<{
        id: string;
        customerId: string;
        name: string;
        server: string;
        domain?: string;
        transport: string;
        account: string;
        sourceIps?: string[];
    }>>;
    updateOutbound(name: string, configPatch: {
        server?: string;
        domain?: string;
        transport?: string;
        account?: string;
        password?: string;
    }): Promise<void>;
    deleteOutbound(name: string): Promise<void>;
}
